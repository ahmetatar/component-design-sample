{
    "pipes": [
        {
            "name": "ButtonStylePipe",
            "id": "pipe-ButtonStylePipe-e182d2be2107097545fd2a572d0d5ca377b2a7d19aa02e2d3127a5f17e626d13963e1abde8f77ee4db794bffd95c432fee722670bcf48d852541b28307bd5116",
            "file": "src/app/shared/components/button/pipes/button-style.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "ButtonStyles",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "Partial<ButtonOptions> | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIt transforms given class name by outline option\n",
                    "description": "<p>It transforms given class name by outline option</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 316,
                                "end": 321,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "ButtonStyles",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 310,
                                "end": 315,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>takes one of ButtonStyles type values</p>\n"
                        },
                        {
                            "name": {
                                "pos": 372,
                                "end": 379,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "options"
                            },
                            "type": "Partial<ButtonOptions> | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 366,
                                "end": 371,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>takes ButtonOptions</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 406,
                                "end": 413,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>transformed class name</p>\n"
                        }
                    ]
                }
            ],
            "ngname": "buttonStyle",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { ButtonStyles } from '../button.models';\nimport { ButtonOptions } from '../button.options';\n\n@Pipe({\n  name: 'buttonStyle',\n})\nexport class ButtonStylePipe implements PipeTransform {\n  /**\n   * It transforms given class name by outline option\n   * @param value takes one of ButtonStyles type values\n   * @param options takes ButtonOptions\n   * @returns transformed class name\n   */\n  transform(value: ButtonStyles, options: Partial<ButtonOptions> | undefined): string {\n    return options?.isOutline ? `btn-outline-${value}` : `btn-${value}`;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AccordionOptions",
            "id": "interface-AccordionOptions-c93d7884fe58bb2fe7001a13b71591c4efacc6e082d4484c94eed763b054cacb85897a1d2b41e12dd03474f9e36c9f7c24a5e2e58300ec5a05ff24f8f506d689",
            "file": "src/app/shared/components/accordion/accordion.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\n/**\n * Accordion options provide settings to control the display and behavior of the component\n */\nexport interface AccordionOptions {\n  /**\n   * Add .accordion-flush to remove the default background-color, some borders,\n   * and some rounded corners to render accordions edge-to-edge with their parent container.\n   *\n   * @link https://getbootstrap.com/docs/5.0/components/accordion/#flush\n   */\n  flush?: boolean;\n\n  /**\n   * Allows accordion item's parent to be set to null.\n   * Thus, more than one item content can be displayed at the same time.\n   */\n  alwaysOpen?: boolean;\n}\n\n/**\n * Default accordion component options\n */\nexport const DEFAULT_ACCORDION_OPTIONS: AccordionOptions = {\n  flush: false,\n};\n\nexport const ACCORDION_OPTIONS = new InjectionToken<AccordionOptions>(\n  'Default Accordion component options'\n);\n",
            "properties": [
                {
                    "name": "alwaysOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Allows accordion item&#39;s parent to be set to null.\nThus, more than one item content can be displayed at the same time.</p>\n",
                    "line": 19,
                    "rawdescription": "\n\nAllows accordion item's parent to be set to null.\nThus, more than one item content can be displayed at the same time.\n"
                },
                {
                    "name": "flush",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Add .accordion-flush to remove the default background-color, some borders,\nand some rounded corners to render accordions edge-to-edge with their parent container.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nAdd .accordion-flush to remove the default background-color, some borders,\nand some rounded corners to render accordions edge-to-edge with their parent container.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 373,
                            "end": 444,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 374,
                                "end": 378,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/components/accordion/#flush\">https://getbootstrap.com/docs/5.0/components/accordion/#flush</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Accordion options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nAccordion options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "AlertOptions",
            "id": "interface-AlertOptions-3c77b97e0c4ebef3b56b64b4871883ff450f7c82c54b241e6d706be1e2eabb8a45e1d74ecc25a41b718c708db22028ac4ab980acc363a1abef09c3ec07c9beae",
            "file": "src/app/shared/components/alert/alert.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface AlertOptions {}\r\n\r\n/**\r\n * Default alert component options\r\n */\r\nexport const DEFAULT_ALERT_OPTIONS: AlertOptions = {};\r\n\r\nexport const ALERT_OPTIONS = new InjectionToken<AlertOptions>('Default Alert component options');\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ButtonOptions",
            "id": "interface-ButtonOptions-e0c77ea95f483987755029ff20ceb8ab2c15cd8c1df9f62c7d275842097be16d0d5ddd66d23cdacb3fce09e8213a315a6e123a3edf29ecfa1064c79fe93fcbe3",
            "file": "src/app/shared/components/button/button.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Button options provide settings to control the display and behavior of the component\r\n */\r\nexport interface ButtonOptions {\r\n  /**\r\n   * Replaces the default modifier classes with the .btn-outline-* ones to remove all\r\n   * background images and colors on any button.\r\n   *\r\n   * @link https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons\r\n   */\r\n  isOutline: boolean;\r\n}\r\n\r\n/**\r\n * Default button component options\r\n */\r\nexport const DEFAULT_BUTTON_OPTIONS: ButtonOptions = {\r\n  isOutline: true,\r\n};\r\n\r\nexport const BUTTON_OPTIONS = new InjectionToken<ButtonOptions>('Default Button component options');\r\n",
            "properties": [
                {
                    "name": "isOutline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Replaces the default modifier classes with the .btn-outline-* ones to remove all\nbackground images and colors on any button.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nReplaces the default modifier classes with the .btn-outline-* ones to remove all\nbackground images and colors on any button.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 339,
                            "end": 419,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 340,
                                "end": 344,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons\">https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Button options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nButton options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "ImageOptions",
            "id": "interface-ImageOptions-30740d0b24fa4150194eead16c1bae52b2c8f74f20c3d92e512609ff74909d683ade43e5b744f9cc28523a24ed62ad04a5e3900b04740592f29ea72d5ecd3b7b",
            "file": "src/app/shared/components/image/image.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface ImageOptions {}\r\n\r\n/**\r\n * Default image component options\r\n */\r\nexport const DEFAULT_IMAGE_OPTIONS: ImageOptions = {};\r\n\r\nexport const IMAGE_OPTIONS = new InjectionToken<ImageOptions>('Default Image component options');\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ProfileOptions",
            "id": "interface-ProfileOptions-f2ecce23da64a23251ca6f7176df52c5043d292c44c5a7216f1255441d97c4d99cf3891b56ac4ab50c3aaa08238b550818faf6db5d960c53399f6bc558e6c569",
            "file": "src/app/modules/profile/profile.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ProfileOptions {\r\n  /**\r\n   * Determines whether the web site link will appear in\r\n   * the user profile.\r\n   */\r\n  showLink: boolean;\r\n}\r\n\r\n/**\r\n * Default profile component options\r\n */\r\nexport const DEFAULT_PROFILE_OPTIONS: ProfileOptions = {\r\n  showLink: true,\r\n};\r\n\r\nexport const PROFILE_OPTIONS = new InjectionToken<ProfileOptions>(\r\n  'Default profile component options'\r\n);\r\n",
            "properties": [
                {
                    "name": "showLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Determines whether the web site link will appear in\nthe user profile.</p>\n",
                    "line": 8,
                    "rawdescription": "\n\nDetermines whether the web site link will appear in\nthe user profile.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SocialButton",
            "id": "interface-SocialButton-fef90fd70df240c8db2a749b95ad312b9fad98bd4c1324c38539d81cab81c391f547ddc301e85118d4ff49a6bb01551a827f2d1254a653f946207812d45e1b87",
            "file": "src/app/modules/social-buttons/social-buttons.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum SocialButtonTypes {\r\n  Facebook = 'bi-facebook',\r\n  Twitter = 'bi-twitter',\r\n  Linkedin = 'bi-linkedin',\r\n  Skype = 'bi-skype',\r\n  Instagram = 'bi-instagram',\r\n}\r\n\r\n/**\r\n * Social button model\r\n */\r\nexport interface SocialButton {\r\n  type: SocialButtonTypes;\r\n  link: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonTypes",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Social button model</p>\n",
            "rawdescription": "\n\nSocial button model\n",
            "methods": []
        },
        {
            "name": "SocialButtonOptions",
            "id": "interface-SocialButtonOptions-ef4b2ec4af74f2d658f9bd856692993d98564180c9ee37cebfa5ada783a67c0bc3663148c95c7140d7825777abdfedd1b8ad3cf1b2f0ac4df3e636b51879003b",
            "file": "src/app/modules/social-buttons/social-buttons.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface SocialButtonOptions {}\r\n\r\n/**\r\n * Default social buttons component options\r\n */\r\nexport const DEFAULT_SOCIAL_BUTTON_OPTIONS: SocialButtonOptions = {};\r\n\r\nexport const SOCIAL_BUTTON_OPTIONS = new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options'\r\n);\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Statistic",
            "id": "interface-Statistic-5666e17d159b238b4853fc386930f1d06d14051bfdb92918b53c402f36faad53efa6c7587dea51147c8c94ca070ee696f77474c0d25c81726afa96704628c1c6",
            "file": "src/app/modules/statistics/statistics.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Statistic {\r\n  value: number;\r\n  text: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Defines a statistic model consisting of a value and a description</p>\n",
            "rawdescription": "\n\nDefines a statistic model consisting of a value and a description\n",
            "methods": []
        },
        {
            "name": "StatisticsOptions",
            "id": "interface-StatisticsOptions-9749b19dccd26294ece2efa0bdbd8796f974ba2732207924c0835573938adbae93b94e27f9c0ca16b67157c2e7651756a8d90c85afd02a2f256f9d589b7825e8",
            "file": "src/app/modules/statistics/statistics.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface StatisticsOptions {}\r\n\r\n/**\r\n * Default statistics component options\r\n */\r\nexport const DEFAULT_STATISTICS_OPTIONS: StatisticsOptions = {};\r\n\r\nexport const STATISTICS_OPTIONS = new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options'\r\n);\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "TextboxOptions",
            "id": "interface-TextboxOptions-f9c3261bb4744663a0d0289977e38428094e3e9bd4eaf851ac802b0aa5f67f9ab395facffd843949968c26741026626a54dbf63f5e317ba2ef36cac0bf7d5ca9",
            "file": "src/app/shared/components/textbox/textbox.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Textbox options provide settings to control the display and behavior of the component\r\n */\r\nexport interface TextboxOptions {\r\n  /**\r\n   * Wraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\r\n   * to enable floating labels with Bootstrap’s textual form fields.\r\n   *\r\n   * @link https://getbootstrap.com/docs/5.0/forms/floating-labels/\r\n   */\r\n  floatingLabels: boolean;\r\n}\r\n\r\n/**\r\n * Default button component options\r\n */\r\nexport const DEFAULT_TEXTBOX_OPTIONS: TextboxOptions = {\r\n  floatingLabels: false,\r\n};\r\n\r\nexport const TEXTBOX_OPTIONS = new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options'\r\n);\r\n",
            "properties": [
                {
                    "name": "floatingLabels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Wraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\nto enable floating labels with Bootstrap’s textual form fields.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nWraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\nto enable floating labels with Bootstrap’s textual form fields.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 364,
                            "end": 431,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 365,
                                "end": 369,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/forms/floating-labels/\">https://getbootstrap.com/docs/5.0/forms/floating-labels/</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Textbox options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nTextbox options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "UserProfile",
            "id": "interface-UserProfile-516435fe3e123f7b9e35e57273388bad25e5c9cd273db66c60438598b0779001c147ff09512db911cf4318aa23c87a930dd697ef0b0a8bacf75e7c56c6872042",
            "file": "src/app/templates/user-profile/user-profile.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { SocialButton } from 'src/app/modules/social-buttons/social-buttons.models';\r\nimport { Statistic } from 'src/app/modules/statistics/statistics.models';\r\n\r\n/**\r\n * To be updated\r\n */\r\nexport interface UserProfile {\r\n  image: string;\r\n  userName: string;\r\n  fullName: string;\r\n  link: string;\r\n  socialLinks: SocialButton[];\r\n  statistics: Statistic[];\r\n}\r\n",
            "properties": [
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "socialLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButton[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "statistics",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Statistic[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>To be updated</p>\n",
            "rawdescription": "\n\nTo be updated\n",
            "methods": []
        },
        {
            "name": "UserProfileOptions",
            "id": "interface-UserProfileOptions-710beed3cbbc33e803459b8b1259e84cf5cf9bea13323c0ab1c9617982deb258f12bfd8c459bc1367125c98c4e41e414da32e32b4fd201066696af0cd4f6ed30",
            "file": "src/app/templates/user-profile/user-profile.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\nimport { ButtonOptions } from '@app/shared/components/button/button.options';\r\nimport { ProfileOptions } from 'src/app/modules/profile/profile.options';\r\nimport { SocialButtonOptions } from 'src/app/modules/social-buttons/social-buttons.options';\r\nimport { StatisticsOptions } from 'src/app/modules/statistics/statistics.options';\r\n\r\nexport interface UserProfileOptions {\r\n  profileOptions?: ProfileOptions;\r\n  socialButtonsOptions?: SocialButtonOptions;\r\n  statisticsOptions?: StatisticsOptions;\r\n  buttonOptions?: ButtonOptions;\r\n}\r\n\r\n/**\r\n * Default user profile component options\r\n */\r\nexport const DEFAULT_USER_PROFILE_OPTIONS: UserProfileOptions = {};\r\n\r\nexport const USER_PROFILE_OPTIONS = new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options'\r\n);\r\n",
            "properties": [
                {
                    "name": "buttonOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonOptions",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "profileOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileOptions",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "socialButtonsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonOptions",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "statisticsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatisticsOptions",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AccordionComponentFixture",
            "id": "class-AccordionComponentFixture-588fc1eda70b9ccf13fa192a7d97787db96d536bbe5df08f27cabe386fbb1f905584d8285438963005015bc5ff87f2ba4fa4371bfc3ebf27f5922a205f66a779",
            "file": "src/app/shared/components/accordion/accordion.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class AccordionComponentFixture extends ComponentBaseFixture {\r\n  protected readonly ACCORDION_FLUSH = '.accordion-flush';\r\n  protected readonly ACCORDION_ITEMS = 'desx-accordion .accordion-item';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns accordion items\r\n   * @returns {HTMLDivElement[] | null} HTMLDivElement array of accordion items\r\n   */\r\n  public getAccordionItems(): HTMLDivElement[] | null {\r\n    return this.getElementAll(this.ACCORDION_ITEMS);\r\n  }\r\n\r\n  /**\r\n   * Returns accordion flush container\r\n   * @returns {HTMLDivElement | null} HTMLDivElement of accordion flush container\r\n   */\r\n  public getAccordionFlushContainer(): HTMLDivElement | null {\r\n    return this.getElement(this.ACCORDION_FLUSH);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "ACCORDION_FLUSH",
                    "defaultValue": "'.accordion-flush'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "ACCORDION_ITEMS",
                    "defaultValue": "'desx-accordion .accordion-item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAccordionFlushContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns accordion flush container\n",
                    "description": "<p>Returns accordion flush container</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 698,
                                "end": 705,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement of accordion flush container</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getAccordionItems",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns accordion items\n",
                    "description": "<p>Returns accordion items</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 445,
                                "end": 452,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement array of accordion items</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AlertComponentFixture",
            "id": "class-AlertComponentFixture-9096b2d9d8c6202c43287840813bd97bc709c6877d9e31a05f34a698ecd5853037872f5fb12121d0bb33c1ca62fd0b2271058bc52559ebe72c50de919bb41836",
            "file": "src/app/shared/components/alert/alert.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class AlertComponentFixture extends ComponentBaseFixture {\r\n  protected readonly ALERT_DISMISSIBLE = '.alert-dismissible';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns alert dismissible element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement of dismissible\r\n   */\r\n  public getDismissibleAlert(): HTMLDivElement[] | null {\r\n    return this.getElement(this.ALERT_DISMISSIBLE);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "ALERT_DISMISSIBLE",
                    "defaultValue": "'.alert-dismissible'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDismissibleAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns alert dismissible element\n",
                    "description": "<p>Returns alert dismissible element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 381,
                                "end": 388,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement of dismissible</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ButtonComponentFixture",
            "id": "class-ButtonComponentFixture-ccbeeea035638361c1b7376b72475dcdafaccc6cd946211401bfb258d4ff9a503c4e07f211e43be7905e39cd3be4fc9afba8015b543b0e4acdc777cf2d8e429e",
            "file": "src/app/shared/components/button/button.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class ButtonComponentFixture extends ComponentBaseFixture {\r\n  protected readonly OUTLINED_PRIMARY_BUTTON = '.btn-outline-primary';\r\n  protected readonly LARGE_BUTTON = '.btn-lg';\r\n  protected readonly WARNING_BUTTON = '.btn-warning';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .btn-warning applied button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getWarningButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.WARNING_BUTTON);\r\n  }\r\n\r\n  /**\r\n   * Returns .btn-lg applied button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getLargeButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.LARGE_BUTTON);\r\n  }\r\n\r\n  /**\r\n   * Returns outlined primary button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getOutlinedPrimaryButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.OUTLINED_PRIMARY_BUTTON);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "LARGE_BUTTON",
                    "defaultValue": "'.btn-lg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "OUTLINED_PRIMARY_BUTTON",
                    "defaultValue": "'.btn-outline-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "WARNING_BUTTON",
                    "defaultValue": "'.btn-warning'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLargeButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .btn-lg applied button element\n",
                    "description": "<p>Returns .btn-lg applied button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 736,
                                "end": 743,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getOutlinedPrimaryButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns outlined primary button element\n",
                    "description": "<p>Returns outlined primary button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 966,
                                "end": 973,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getWarningButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .btn-warning applied button element\n",
                    "description": "<p>Returns .btn-warning applied button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 503,
                                "end": 510,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ComponentBaseFixture",
            "id": "class-ComponentBaseFixture-2a31b92caf2a04fef78a59cc7c4e7909e801930cef28303b3e2ee3d41beffea74fa0fbb1c90e6fb518b4d33d98f0a939de478759f7a9ffc6390dab48682bf7b1",
            "file": "src/app/shared/testing/component.base-fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from \"@angular/core\";\r\nimport { By } from \"@angular/platform-browser\";\r\n\r\nexport abstract class ComponentBaseFixture {\r\n  constructor(private debugEl: DebugElement) {}\r\n\r\n  /**\r\n   * Returns nativeElement of queried element\r\n   * @param selector element selector\r\n   * @returns NativeElement\r\n   */\r\n  public getElement<T>(selector: string) {\r\n    const element = this.debugEl.query(By.css(selector));\r\n    return element ? element.nativeElement as T : null;\r\n  }\r\n\r\n  /**\r\n   * Returns nativeElement list of queried element\r\n   * @param selector element selector\r\n   * @returns NativeElement list\r\n   */\r\n  public getElementAll<T>(selector: string) {\r\n    const elements = this.debugEl.queryAll(By.css(selector));\r\n    return elements ? elements.map((el) => el.nativeElement as T) : null;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "debugEl",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "debugEl",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ]
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ImageComponentFixture",
            "id": "class-ImageComponentFixture-1b655f7c4974ecf198f778bc1b887fa175583610833c341eb95deeab9195ddbb941888c2e611a36a82115263fb7d57a12777f4b3ee2a6d99257ce56f1c5cd748",
            "file": "src/app/shared/components/image/image.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class ImageComponentFixture extends ComponentBaseFixture {\r\n  protected readonly IMAGE_FLUID_SELECTOR = '.img-fluid';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .img-fluid applied input element\r\n   * @returns {HTMLImageElement | null}\r\n   */\r\n  public getImage(): HTMLImageElement | null {\r\n    return this.getElement(this.IMAGE_FLUID_SELECTOR);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "IMAGE_FLUID_SELECTOR",
                    "defaultValue": "'.img-fluid'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getImage",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLImageElement | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .img-fluid applied input element\n",
                    "description": "<p>Returns .img-fluid applied input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 383,
                                "end": 390,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProfileComponentFixture",
            "id": "class-ProfileComponentFixture-270fee34534b3e22697e3216f28670176994634c9cc8a6525e6cf555c058272e4c92f327d6c936142900d196065a097dc3c8a8fcf20c774985508ed0e1e27bcf",
            "file": "src/app/modules/profile/profile.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class ProfileComponentFixture extends ComponentBaseFixture {\r\n  protected readonly PROFILE_USER_LINK = '.profile-user-link';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns user profile link\r\n   * @returns {HTMLAnchorElement | null} HTMLAnchorElement\r\n   */\r\n  public getUserLink(): HTMLAnchorElement | null {\r\n    return this.getElement(this.PROFILE_USER_LINK);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "PROFILE_USER_LINK",
                    "defaultValue": "'.profile-user-link'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserLink",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLAnchorElement | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns user profile link\n",
                    "description": "<p>Returns user profile link</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 384,
                                "end": 391,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLAnchorElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SocialButtonsComponentFixture",
            "id": "class-SocialButtonsComponentFixture-12e2da71d475a149616cdede8041d288327701eda706984615a393c1de8640de01f21dc8a451e9af840a786c4889e9c54b194bb61b0dc3b6c289cd82e0b6ebf5",
            "file": "src/app/modules/social-buttons/social-buttons.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class SocialButtonsComponentFixture extends ComponentBaseFixture {\r\n  protected readonly SOCIAL_BUTTONS = '.social-buttons desx-button';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns all button element under social buttons container\r\n   * @returns {HTMLButtonElement[] | null} social button elements\r\n   */\r\n  public getButtons(): HTMLButtonElement[] | null {\r\n    return this.getElementAll(this.SOCIAL_BUTTONS);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "SOCIAL_BUTTONS",
                    "defaultValue": "'.social-buttons desx-button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getButtons",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns all button element under social buttons container\n",
                    "description": "<p>Returns all button element under social buttons container</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 428,
                                "end": 435,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>social button elements</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StatisticComponentFixture",
            "id": "class-StatisticComponentFixture-d7159620f6c6df02e3b019c682618d3cecd89d5724c74bdf4da2aa4137858b8b5319c355a91442a7337309d40dbc44b0519465bc32dee5803ba5fd1abde3cbcd",
            "file": "src/app/modules/statistics/statistics.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class StatisticComponentFixture extends ComponentBaseFixture {\r\n  protected readonly STATISTIC_COLUMNS = '.statistics .statistic-item';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns statistic columns\r\n   */\r\n  public getStatisticItems() {\r\n    return this.getElementAll(this.STATISTIC_COLUMNS);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "STATISTIC_COLUMNS",
                    "defaultValue": "'.statistics .statistic-item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getStatisticItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns statistic columns\n",
                    "description": "<p>Returns statistic columns</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TextboxComponentFixture",
            "id": "class-TextboxComponentFixture-b07697f0d8399acf2ed14ddfed3c108a8fca36bec6cec90b442a7ec373704374961bc9f36e5c01c53a7fab8a95cb6fede7ddb55caaa76b76f86bdce4d0c35f75",
            "file": "src/app/shared/components/textbox/textbox.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class TextboxComponentFixture extends ComponentBaseFixture {\r\n  protected readonly FORM_CONTROL = '.form-control';\r\n  protected readonly FLOATING_LABELED_FORM_CONTROL = '.form-floating';\r\n  protected readonly BASE_INPUT = 'input';\r\n  protected readonly VALID_FEEDBACK_DIV = '.valid-feedback';\r\n  protected readonly INVALID_FEEDBACK_DIV = '.invalid-feedback';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .form-control applied input element\r\n   * @returns {HTMLInputElement | null} HTMLDivElement\r\n   */\r\n  public getFormControl(): HTMLInputElement | null {\r\n    return this.getElement(this.FORM_CONTROL);\r\n  }\r\n\r\n  /**\r\n   * Returns form-floating wrapper element if textbox is floating control\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getFloatingContainer(): HTMLDivElement | null {\r\n    return this.getElement(this.FLOATING_LABELED_FORM_CONTROL);\r\n  }\r\n\r\n  /**\r\n   * Returns base input element\r\n   * @returns {HTMLInputElement | null} HTMLInputElement\r\n   */\r\n  public getInput(): HTMLInputElement | null {\r\n    return this.getElement(this.BASE_INPUT);\r\n  }\r\n\r\n  /**\r\n   * Returns valid feedback element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getValidFeedback(): HTMLDivElement | null {\r\n    return this.getElement(this.VALID_FEEDBACK_DIV);\r\n  }\r\n\r\n  /**\r\n   * Returns invalid feedback element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getInvalidFeedback(): HTMLDivElement | null {\r\n    return this.getElement(this.INVALID_FEEDBACK_DIV);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "BASE_INPUT",
                    "defaultValue": "'input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "FLOATING_LABELED_FORM_CONTROL",
                    "defaultValue": "'.form-floating'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "FORM_CONTROL",
                    "defaultValue": "'.form-control'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "INVALID_FEEDBACK_DIV",
                    "defaultValue": "'.invalid-feedback'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "VALID_FEEDBACK_DIV",
                    "defaultValue": "'.valid-feedback'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getFloatingContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns form-floating wrapper element if textbox is floating control\n",
                    "description": "<p>Returns form-floating wrapper element if textbox is floating control</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 881,
                                "end": 888,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLInputElement | null",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .form-control applied input element\n",
                    "description": "<p>Returns .form-control applied input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 627,
                                "end": 634,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getInput",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLInputElement | null",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns base input element\n",
                    "description": "<p>Returns base input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1112,
                                "end": 1119,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLInputElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getInvalidFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns invalid feedback element\n",
                    "description": "<p>Returns invalid feedback element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1544,
                                "end": 1551,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getValidFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns valid feedback element\n",
                    "description": "<p>Returns valid feedback element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1322,
                                "end": 1329,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 562,
                                "end": 570,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 556,
                                "end": 561,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 595,
                                "end": 602,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AccordionContentDirective",
            "id": "directive-AccordionContentDirective-017f91dbaf90b9df9748dd82ade8795b3fa99abdb4051b526578f6c460264baf6711adcc67db87224dac1758d8c3b4c357341525aedf2423cbc2e0d862cb24f1",
            "file": "src/app/shared/components/accordion/directives/accordion-content.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[desx-accordion-content]',\n})\nexport class AccordionContentDirective {\n  constructor(public tmplRef: TemplateRef<any>) {}\n}\n",
            "selector": "ng-template[desx-accordion-content]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tmplRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AccordionHeaderDirective",
            "id": "directive-AccordionHeaderDirective-bfaca2a49d77f6435a587ec052357a6c911002a20a5f951983f323ec53fd206f6701f8fbcb83024fc4668f83b4f3a4686754a7ca5f4a13bd58c4895e7234a7e2",
            "file": "src/app/shared/components/accordion/directives/accordion-header.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: 'ng-template[desx-accordion-header]',\n})\nexport class AccordionHeaderDirective {\n  constructor(public tmplRef: TemplateRef<any>) {}\n}\n",
            "selector": "ng-template[desx-accordion-header]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tmplRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AccordionItemDirective",
            "id": "directive-AccordionItemDirective-32b7775f9a51be7fbf638cc3251278e9b9f1322c92c5e31dcbfd63cd092627c7e268fad75d9aa8f7eae3e5a6f59174bc8cf581b5483b12e6e565a121680b6a8a",
            "file": "src/app/shared/components/accordion/directives/accordion-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterContentInit, ContentChildren, Directive, Input, QueryList } from '@angular/core';\nimport { AccordionContentDirective } from './accordion-content.directive';\nimport { AccordionHeaderDirective } from './accordion-header.directive';\n\n@Directive({\n  selector: 'desx-accordion-item',\n})\nexport class AccordionItemDirective implements AfterContentInit {\n  headerTmpl!: AccordionHeaderDirective;\n  contentTmpl!: AccordionContentDirective;\n\n  @Input()\n  id!: string;\n\n  @Input()\n  show: boolean = false;\n\n  @ContentChildren(AccordionHeaderDirective, { descendants: true })\n  headerTmpls!: QueryList<AccordionHeaderDirective>;\n\n  @ContentChildren(AccordionContentDirective, { descendants: true })\n  contentTmpls!: QueryList<AccordionContentDirective>;\n\n  ngAfterContentInit(): void {\n    this.headerTmpl = this.headerTmpls.first;\n    this.contentTmpl = this.contentTmpls.first;\n  }\n}\n",
            "selector": "desx-accordion-item",
            "providers": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "contentTmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionContentDirective",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "contentTmpls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionContentDirective>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionContentDirective, {descendants: true}"
                        }
                    ]
                },
                {
                    "name": "headerTmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionHeaderDirective",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "headerTmpls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionHeaderDirective>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionHeaderDirective, {descendants: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterContentInit"
            ]
        }
    ],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-138282bf770b89cb0434ad8ef13dc7544fbf86c48992bd1d8f8ddd3804ce53100e4e7a83f332552c200de283771117a40da0a8955fc79e329b445d5c65999cea",
            "file": "src/app/shared/components/accordion/accordion.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-accordion",
            "styleUrls": [
                "./accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Partial<AccordionOptions>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "hidden",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "hide",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                },
                {
                    "name": "show",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "shown",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionItemDirective>",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionItemDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AccordionItemDirective } from './directives/accordion-item.directive';\nimport { EventType } from './accordion.models';\nimport { AccordionOptions, ACCORDION_OPTIONS } from './accordion.options';\n\n@Component({\n  selector: 'desx-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AccordionComponent implements OnInit {\n  @Input()\n  id: string = '';\n\n  @Input()\n  options?: Partial<AccordionOptions>;\n\n  @Output()\n  show = new EventEmitter<Event>();\n\n  @Output()\n  shown = new EventEmitter<Event>();\n\n  @Output()\n  hide = new EventEmitter<Event>();\n\n  @Output()\n  hidden = new EventEmitter<Event>();\n\n  @ContentChildren(AccordionItemDirective) items!: QueryList<AccordionItemDirective>;\n\n  constructor(\n    @Inject(ACCORDION_OPTIONS) private defaultOptions: AccordionOptions,\n    private elRef: ElementRef,\n    private renderer: Renderer2,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.renderer.listen(this.elRef.nativeElement, EventType.Show, (e) => this.show.emit(e));\n      this.renderer.listen(this.elRef.nativeElement, EventType.Shown, (e) => this.shown.emit(e));\n      this.renderer.listen(this.elRef.nativeElement, EventType.Hide, (e) => this.hide.emit(e));\n      this.renderer.listen(this.elRef.nativeElement, EventType.Hidden, (e) =>\n        this.hidden.emit(e)\n      );\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-accordion {\r\n  .accordion-button:not(.collapsed) {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    border-color: transparent;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    font-weight: 700;\r\n  }\r\n}\r\n",
                    "styleUrl": "./accordion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "AccordionOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "AccordionOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [id]=\"id\" [ngClass]=\"['accordion', options?.flush ? 'accordion-flush' : '']\">\r\n  <ng-template ngFor [ngForOf]=\"items\" let-item>\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" [id]=\"'heading_' + item.id\">\r\n        <button\r\n          [ngClass]=\"['accordion-button', !item.show ? 'collapsed' : '']\"\r\n          [attr.data-bs-target]=\"'#' + item.id\"\r\n          [attr.aria-expanded]=\"item.show ? 'true' : 'false'\"\r\n          [attr.aria-controls]=\"item.id\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n        >\r\n          <ng-container [ngTemplateOutlet]=\"item.headerTmpl.tmplRef\"></ng-container>\r\n        </button>\r\n      </h2>\r\n      <div\r\n        [id]=\"item.id\"\r\n        [ngClass]=\"['accordion-collapse collapse', item.show ? 'show' : '']\"\r\n        [attr.aria-labelledby]=\"'heading_' + item.id\"\r\n        [attr.data-bs-parent]=\"!options?.alwaysOpen ? '#' + id : ''\"\r\n      >\r\n        <div class=\"accordion-body\">\r\n          <ng-container [ngTemplateOutlet]=\"item.contentTmpl.tmplRef\"></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-b4fb65be1e0fda3737dd42a67f93f711101cb4fb488d615d89c6057dfa24ba07918a3303f83a0686d95b410a05e23cbb6c2bbdef6465f8dd00113089bf12bd0f",
            "file": "src/app/shared/components/alert/alert.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dismissible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Partial<AlertOptions>",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'alert-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "AlertTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closed",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AlertTypes, EventType } from './alert.models';\nimport { AlertOptions, ALERT_OPTIONS } from './alert.options';\nimport * as bootstrap from 'bootstrap';\n\n@Component({\n  selector: 'desx-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AlertComponent implements OnInit {\n  @Input()\n  options?: Partial<AlertOptions>;\n\n  @Input()\n  type: AlertTypes = 'alert-primary';\n\n  @Input()\n  dismissible: boolean = false;\n\n  @Output()\n  closed = new EventEmitter<Event>();\n\n  constructor(\n    @Inject(ALERT_OPTIONS) private defaultOptions: AlertOptions,\n    private elRef: ElementRef,\n    private renderer: Renderer2,\n    private zone: NgZone\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.renderer.listen(this.elRef.nativeElement, EventType.Close, (e) => this.closed.emit(e));\n    });\n  }\n\n  close(): void {\n    this.zone.runOutsideAngular(() => {\n      const alert = bootstrap.Alert.getInstance(this.elRef.nativeElement);\n      alert?.close();\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "AlertOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "AlertOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"['alert', type, dismissible ? 'alert-dismissible fade show' : '']\" role=\"alert\">\n  <ng-content></ng-content>\n  <button\n    *ngIf=\"dismissible\"\n    type=\"button\"\n    class=\"btn-close\"\n    data-bs-dismiss=\"alert\"\n    aria-label=\"Close\"\n  ></button>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3ebe22b37d871ec489aa17e081634a46c91a606876f59ce5e7eb73920913bae1c168ca76dee1f08889f362c300b3b1510a4a01a997a5d63e94344b754c66425e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '',\n})\nexport class AppComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2861140b49520f59e8c0d5eaa8fb3c13ef7d278b9a5a232e36843b0b6add1f13961e6f18663beabb6bc8532d5c69e552170f54412601f7084e7bed9865d9fa41",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnStyle",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ButtonStyles",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Partial<ButtonOptions>",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ButtonSizes",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "ButtonTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ButtonSizes, ButtonStyles, ButtonTypes } from './button.models';\nimport { ButtonOptions, BUTTON_OPTIONS } from './button.options';\n\n@Component({\n  selector: 'desx-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ButtonComponent implements OnInit {\n  @Input()\n  options?: Partial<ButtonOptions>;\n\n  @Input()\n  size: ButtonSizes = '';\n\n  @Input()\n  btnStyle: ButtonStyles = 'primary';\n\n  @Input()\n  type: ButtonTypes = 'button';\n\n  @Output()\n  click = new EventEmitter<Event>();\n\n  constructor(\n    @Inject(BUTTON_OPTIONS) private defaultOptions: ButtonOptions,\n    private elRef: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n\n    this.renderer.listen(this.elRef.nativeElement, 'click', (e) => this.click.emit(e));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button [type]=\"type\" [ngClass]=\"['btn', btnStyle | buttonStyle: options, size]\">\n  <ng-content></ng-content>\n</button>\n"
        },
        {
            "name": "ImageComponent",
            "id": "component-ImageComponent-8d596867889719174bea71dcb12bfbdafb15d6a22528711ab89e5cb83e83c6bf622cec1d588c225f61b20d0db592c9cd6a653f1c1755f7ec98d24d5bada4b98e",
            "file": "src/app/shared/components/image/image.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-image",
            "styleUrls": [
                "./image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "altText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Partial<ImageOptions>",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ImageType",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ImageType } from './image.models';\nimport { ImageOptions, IMAGE_OPTIONS } from './image.options';\n\n@Component({\n  selector: 'desx-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ImageComponent implements OnInit {\n  @Input()\n  id: string = '';\n\n  @Input()\n  options?: Partial<ImageOptions>;\n\n  @Input()\n  source: string = '';\n\n  @Input()\n  altText: string = '';\n\n  @Input()\n  width: string = '0';\n\n  @Input()\n  height: string = '0';\n\n  @Input()\n  type: ImageType = 'rounded';\n\n  constructor(@Inject(IMAGE_OPTIONS) private defaultOptions: ImageOptions) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./image.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ImageOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ImageOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<img\r\n  [id]=\"id\"\r\n  [src]=\"source\"\r\n  [alt]=\"altText\"\r\n  [width]=\"width\"\r\n  [height]=\"height\"\r\n  [ngClass]=\"['img-fluid', type]\"\r\n/>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-88d5142447ac177fefc9da4c07c95e4b5b2dcb53ab4aaf9ad750c9dc435d772f6089b2eeeddd836ff0445169b94ea7d4ce69eb6634a8d792a356a87d11f58967",
            "file": "src/app/modules/profile/profile.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fullName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Partial<ProfileOptions>",
                    "decorators": []
                },
                {
                    "name": "profileImage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "userName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { ProfileOptions, PROFILE_OPTIONS } from './profile.options';\n\n@Component({\n  selector: 'desx-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ProfileComponent implements OnInit {\n  @Input()\n  options?: Partial<ProfileOptions>;\n\n  // TODO will be set to default user image\n  @Input()\n  profileImage: string = '';\n\n  @Input()\n  userName: string = '';\n\n  @Input()\n  fullName: string = '';\n\n  @Input()\n  link?: string;\n\n  constructor(@Optional() @Inject(PROFILE_OPTIONS) private defaultOptions: ProfileOptions) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$header-color: #3e3e3e !default;\r\n$subtitle-color: rgb(133, 132, 132) !default;\r\n\r\ndesx-profile {\r\n  text-align: center;\r\n\r\n  desx-image img {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .seperator {\r\n    margin: 0 1rem;\r\n    color: $subtitle-color;\r\n    font-weight: 100;\r\n  }\r\n\r\n  .profile-full-name {\r\n    color: $header-color;\r\n  }\r\n\r\n  .profile-user-name {\r\n    color: $subtitle-color;\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <desx-image id=\"profileImage\" [source]=\"profileImage\" width=\"100\" height=\"100\"></desx-image>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-8\">\n      <h4 class=\"profile-full-name\">{{ fullName }}</h4>\n      <span class=\"profile-user-name\">{{ userName }}</span>\n      <span *ngIf=\"options?.showLink\" class=\"seperator\">|</span>\n      <a *ngIf=\"options?.showLink\" class=\"profile-user-link\" href=\"#\">{{ link }}</a>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "SocialButtonsComponent",
            "id": "component-SocialButtonsComponent-dfe704254d745d51072661c9abc1bae7f15f8ca582226d5b4a6bc774e758a299404372c3a16ee03e1a28c0e4bab189cd58a2c2be112db3e1cab877615f09a46e",
            "file": "src/app/modules/social-buttons/social-buttons.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-social-buttons",
            "styleUrls": [
                "./social-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./social-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "SocialButton[]",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<SocialButtonOptions>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { SocialButton } from './social-buttons.models';\nimport { SocialButtonOptions, SOCIAL_BUTTON_OPTIONS } from './social-buttons.options';\n\n@Component({\n  selector: 'desx-social-buttons',\n  templateUrl: './social-buttons.component.html',\n  styleUrls: ['./social-buttons.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SocialButtonsComponent implements OnInit {\n  @Input()\n  options?: Partial<SocialButtonOptions>;\n\n  @Input()\n  buttons: SocialButton[] = [];\n\n  constructor(\n    @Optional() @Inject(SOCIAL_BUTTON_OPTIONS) private defaultOptions: SocialButtonOptions\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-social-buttons {\r\n  desx-button {\r\n    button.btn {\r\n      border-radius: 50%;\r\n      padding: 5px 9px 5px 9px;\r\n      border-width: 0.125rem;\r\n      margin-right: 0.3rem;\r\n    }\r\n\r\n    button.btn-outline-primary {\r\n      &:hover {\r\n        border-color: none;\r\n        background-color: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./social-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "SocialButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "SocialButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"social-buttons\">\n  <desx-button\n    *ngFor=\"let button of buttons\"\n    type=\"button\"\n    buttonStyle=\"primary\"\n    [options]=\"{ isOutline: true }\"\n  >\n    <a [href]=\"button.link\">\n      <i [ngClass]=\"['bi', button.type]\"></i>\n    </a>\n  </desx-button>\n</div>\n"
        },
        {
            "name": "StatisticsComponent",
            "id": "component-StatisticsComponent-f561fd83f3a56c3528df6f314173d4ac711f3cf905af80d6e1f60108ab670aa8622e15aee2a5cc8190daac12df8836addef929de6e4d84759c829b90cd4077bb",
            "file": "src/app/modules/statistics/statistics.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-statistics",
            "styleUrls": [
                "./statistics.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./statistics.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<StatisticsOptions>",
                    "decorators": []
                },
                {
                    "name": "statistics",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Statistic[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { Statistic } from './statistics.models';\nimport { StatisticsOptions, STATISTICS_OPTIONS } from './statistics.options';\n\n@Component({\n  selector: 'desx-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class StatisticsComponent implements OnInit {\n  @Input()\n  options?: Partial<StatisticsOptions>;\n\n  @Input()\n  statistics: Statistic[] = [];\n\n  constructor(@Optional() @Inject(STATISTICS_OPTIONS) private defaultOptions: StatisticsOptions) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-statistics {\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./statistics.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "StatisticsOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "StatisticsOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row statistics\">\r\n  <div *ngFor=\"let statistic of statistics\" class=\"statistic-item col-md-4 col-lg-2 col-sm-4\">\r\n    <h5>{{ statistic.value }}</h5>\r\n    <p>{{ statistic.text }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-ae1f4449ffd8e6067b2aa723410e1a3976ac649fb5d106df06fda734e03e411c2d85be935aca3662c685bd66d9eab6d7987db4705f9356a57c6b804a71590726",
            "file": "src/app/shared/components/textbox/textbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: TextboxComponent, multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "desx-textbox",
            "styleUrls": [
                "./textbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalidFeedback",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Partial<TextboxOptions>",
                    "decorators": []
                },
                {
                    "name": "parentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TextboxSize",
                    "decorators": []
                },
                {
                    "name": "textboxType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TextboxType",
                    "decorators": []
                },
                {
                    "name": "validFeedback",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TextboxSize, TextboxType } from './textbox.models';\nimport { TextboxOptions, TEXTBOX_OPTIONS } from './textbox.options';\n\n@Component({\n  selector: 'desx-textbox',\n  templateUrl: './textbox.component.html',\n  styleUrls: ['./textbox.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TextboxComponent,\n      multi: true,\n    },\n  ],\n})\nexport class TextboxComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  id: string = '';\n\n  @Input()\n  options?: Partial<TextboxOptions>;\n\n  @Input()\n  textboxType: TextboxType = 'text';\n\n  @Input()\n  size: TextboxSize = '';\n\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  label: string = '';\n\n  @Input()\n  validFeedback: string = '';\n\n  @Input()\n  invalidFeedback: string = '';\n\n  @Input()\n  parentForm?: FormGroup;\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val: string) {\n    if (val !== undefined && val !== this._value) {\n      this._value = val;\n\n      this.onChange(val);\n      this.onTouch();\n    }\n  }\n\n  private _value: string = '';\n  private onChange = (val: any) => {};\n  private onTouch = () => {};\n\n  constructor(@Inject(TEXTBOX_OPTIONS) private defaultOptions: TextboxOptions) {}\n\n  writeValue(obj: any): void {\n    this.value = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".invalid-feedback, .valid-feedback {\r\n  display: block !important;\r\n}\r\n",
                    "styleUrl": "./textbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "TextboxOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "TextboxOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            },
            "templateData": "<ng-container\n  *ngTemplateOutlet=\"options?.floatingLabels ? floatingTextboxTemplate : labeledTextboxTemplate\"\n></ng-container>\n\n<ng-template #defaultTextboxTemplate>\n  <input\n    [id]=\"id\"\n    [name]=\"id\"\n    [type]=\"textboxType\"\n    [placeholder]=\"placeholder\"\n    [ngClass]=\"['form-control', size]\"\n    [(ngModel)]=\"value\"\n  />\n</ng-template>\n\n<ng-template #validationTemplate>\n  <div *ngIf=\"parentForm?.valid && parentForm?.touched\" class=\"valid-feedback\">\n    {{ validFeedback }}\n  </div>\n  <div *ngIf=\"parentForm?.invalid\" class=\"invalid-feedback\">{{ invalidFeedback }}</div>\n</ng-template>\n\n<ng-template #labeledTextboxTemplate>\n  <label class=\"form-label\" [for]=\"id\">{{ label }}</label>\n  <ng-container *ngTemplateOutlet=\"defaultTextboxTemplate\"></ng-container>\n  <ng-container *ngTemplateOutlet=\"validationTemplate\"></ng-container>\n</ng-template>\n\n<ng-template #floatingTextboxTemplate>\n  <div class=\"form-floating\">\n    <ng-container *ngTemplateOutlet=\"defaultTextboxTemplate\"></ng-container>\n    <label class=\"form-label\" [for]=\"id\">{{ label }}</label>\n  </div>\n  <ng-container *ngTemplateOutlet=\"validationTemplate\"></ng-container>\n</ng-template>\n"
        },
        {
            "name": "TextboxWrapperComponent",
            "id": "component-TextboxWrapperComponent-2655ded6aab87ace39ddf6c635818ae45f9a306f7c3e973ef448c8c388cfaf8e3da9f16d41055c5de8bf40161477ab0bafff4253671807b729ee02f58ab17ef0",
            "file": "src/app/shared/components/textbox/textbox.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-textbox-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<form #registerForm [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <desx-textbox\n    id=\"passengerName\"\n    label=\"Passenger Name\"\n    textboxType=\"text\"\n    formControlName=\"passengerName\"\n    validFeedback=\"Looks good!\"\n    invalidFeedback=\"Please provide a valid passenger name\"\n    [parentForm]=\"form\"\n  ></desx-textbox>\n  <br />\n  <desx-button id=\"saveButton\" [type]=\"buttonType\">Save</desx-button>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonType",
                    "defaultValue": "'submit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonTypes",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "textbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextboxComponent",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TextboxComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { moduleMetadata, Meta, Story, componentWrapperDecorator } from '@storybook/angular';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { ButtonTypes } from '../button/button.models';\r\nimport { DEFAULT_COMPONENT_OPTIONS } from '../components.config';\r\nimport { TextboxComponent } from './textbox.component';\r\n\r\n@Component({\r\n  selector: 'desx-textbox-wrapper',\r\n  template: `\r\n    <form #registerForm [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <desx-textbox\r\n        id=\"passengerName\"\r\n        label=\"Passenger Name\"\r\n        textboxType=\"text\"\r\n        formControlName=\"passengerName\"\r\n        validFeedback=\"Looks good!\"\r\n        invalidFeedback=\"Please provide a valid passenger name\"\r\n        [parentForm]=\"form\"\r\n      ></desx-textbox>\r\n      <br />\r\n      <desx-button id=\"saveButton\" [type]=\"buttonType\">Save</desx-button>\r\n    </form>\r\n  `,\r\n})\r\nclass TextboxWrapperComponent implements OnInit {\r\n  form!: FormGroup;\r\n  buttonType: ButtonTypes = 'submit';\r\n\r\n  @ViewChild(TextboxComponent) textbox!: TextboxComponent;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      passengerName: new FormControl('Enter passenger name', Validators.required),\r\n    });\r\n  }\r\n\r\n  onSubmit = () => {};\r\n}\r\n\r\nexport default {\r\n  title: 'Design System/Molecules/Textbox',\r\n  component: TextboxComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [FormsModule, ReactiveFormsModule],\r\n      declarations: [TextboxComponent, TextboxWrapperComponent, ButtonComponent],\r\n      providers: [...DEFAULT_COMPONENT_OPTIONS],\r\n    }),\r\n    componentWrapperDecorator((story) => `<div style=\"margin: 5rem\">${story}</div>`),\r\n  ],\r\n  argTypes: {\r\n    ngOnInit: { table: { disable: true } },\r\n    writeValue: { table: { disable: true } },\r\n    registerOnChange: { table: { disable: true } },\r\n    registerOnTouched: { table: { disable: true } },\r\n    onTouch: { table: { disable: true } },\r\n    onChange: { table: { disable: true } },\r\n    _value: { table: { disable: true } },\r\n  },\r\n} as Meta;\r\n\r\n/**\r\n * Default template for stories\r\n *\r\n * @param args template arguments\r\n * @returns Story\r\n */\r\nconst Template: Story = (args) => ({\r\n  props: args,\r\n});\r\n\r\n/**\r\n * This template uses TextboxWrapperComponent to wrap\r\n * textbox with form element\r\n *\r\n * @param args template arguments\r\n * @returns Story\r\n */\r\nconst FormTemplate: Story = (args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n});\r\n\r\n/**\r\n * Default story\r\n */\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  id: 'passengerName',\r\n  label: 'Passenger Name',\r\n  placeholder: 'Enter your passenger name',\r\n};\r\n\r\n/**\r\n * Floating labels\r\n */\r\nexport const Floating = Template.bind({});\r\nFloating.args = {\r\n  ...Default.args,\r\n  options: {\r\n    floatingLabels: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Floating labels w/ value\r\n */\r\nexport const FloatingWithValue = Template.bind({});\r\nFloatingWithValue.args = {\r\n  ...Default.args,\r\n  value: 'Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.',\r\n  options: {\r\n    floatingLabels: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Textbox w/ form wrapper\r\n */\r\nexport const TextboxInForm = FormTemplate.bind({});\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "UserProfileComponent",
            "id": "component-UserProfileComponent-2ad5d4d80d17d4e187581afd574b29f5c999b942a6c5a89d294a8d5270f23211c3919f9d0e847f2faf5ce0a30808cffde6ffc4f09ef96eec1d375162242938de",
            "file": "src/app/templates/user-profile/user-profile.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-user-profile",
            "styleUrls": [
                "./user-profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<UserProfileOptions>",
                    "decorators": []
                },
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UserProfile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { UserProfile } from './user-profile.models';\nimport { UserProfileOptions, USER_PROFILE_OPTIONS } from './user-profile.options';\n\n@Component({\n  selector: 'desx-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UserProfileComponent implements OnInit {\n  @Input()\n  options?: Partial<UserProfileOptions>;\n\n  @Input()\n  profile!: UserProfile;\n\n  constructor(\n    @Optional() @Inject(USER_PROFILE_OPTIONS) private defaultOptions: UserProfileOptions\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-user-profile {\r\n  section {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  #bookingSection button {\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    border-radius: 20px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    padding-right: 1.1rem;\r\n    padding-left: 1.1rem;\r\n  }\r\n}\r\n",
                    "styleUrl": "./user-profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "UserProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "UserProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"user-profile\">\n  <section id=\"profileSection\">\n    <desx-profile\n      [profileImage]=\"profile.image\"\n      [fullName]=\"profile.fullName\"\n      [userName]=\"profile.userName\"\n      [link]=\"profile.link\"\n      [options]=\"options?.profileOptions\"\n    ></desx-profile>\n  </section>\n  <section id=\"socialSection\">\n    <desx-social-buttons\n      [buttons]=\"profile.socialLinks\"\n      [options]=\"options?.profileOptions\"\n    ></desx-social-buttons>\n  </section>\n  <section id=\"bookingSection\">\n    <desx-button [options]=\"options?.buttonOptions\"\n      ><i class=\"bi bi-clock\"></i> Book Now</desx-button\n    >\n  </section>\n  <section id=\"statisticSection\">\n    <desx-statistics [statistics]=\"profile.statistics\"></desx-statistics>\n  </section>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a36337a227deb5d1b0fa1eabb8dac988a6d7f0b54fbf3eaf15ecad37982be8277d000d9bc183487ab7a7440426f4e77e5981cd14a387cab439b74da6279c685d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProfileComponent } from './modules/profile/profile.component';\nimport { SocialButtonsComponent } from './modules/social-buttons/social-buttons.component';\nimport { StatisticsComponent } from './modules/statistics/statistics.component';\nimport { UserProfileComponent } from './templates/user-profile/user-profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    SocialButtonsComponent,\n    StatisticsComponent,\n    UserProfileComponent,\n  ],\n  imports: [BrowserModule, CommonModule, SharedModule, RouterModule, ReactiveFormsModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SocialButtonsComponent"
                        },
                        {
                            "name": "StatisticsComponent"
                        },
                        {
                            "name": "UserProfileComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-cb53f0ceeff1b8692515f2ed636f1d9dde3dc881f1d5907efe89c139e8148a261561d6a28b324b363b82cbf75824b18510b5b7d23da5a7a3d431bfed8d032cfb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AccordionComponent } from './components/accordion/accordion.component';\r\nimport { DEFAULT_COMPONENT_OPTIONS } from './components/components.config';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionHeaderDirective } from './components/accordion/directives/accordion-header.directive';\r\nimport { AccordionContentDirective } from './components/accordion/directives/accordion-content.directive';\r\nimport { AccordionItemDirective } from './components/accordion/directives/accordion-item.directive';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TextboxComponent } from './components/textbox/textbox.component';\r\nimport { ImageComponent } from './components/image/image.component';\r\nimport { ButtonStylePipe } from './components/button/pipes/button-style.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionComponent,\r\n    ButtonComponent,\r\n    AccordionHeaderDirective,\r\n    AccordionContentDirective,\r\n    AccordionItemDirective,\r\n    AlertComponent,\r\n    TextboxComponent,\r\n    ImageComponent,\r\n    ButtonStylePipe,\r\n  ],\r\n  providers: [...DEFAULT_COMPONENT_OPTIONS],\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\r\n  exports: [\r\n    AccordionComponent,\r\n    AccordionItemDirective,\r\n    AccordionHeaderDirective,\r\n    AccordionContentDirective,\r\n    TextboxComponent,\r\n    ButtonComponent,\r\n    ImageComponent,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionContentDirective"
                        },
                        {
                            "name": "AccordionHeaderDirective"
                        },
                        {
                            "name": "AccordionItemDirective"
                        },
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonStylePipe"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "TextboxComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionContentDirective"
                        },
                        {
                            "name": "AccordionHeaderDirective"
                        },
                        {
                            "name": "AccordionItemDirective"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "TextboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ACCORDION_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AccordionOptions>(\n  'Default Accordion component options'\n)"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  onShow: action(EventType.Show),\n  onShown: action(EventType.Shown),\n  onHide: action(EventType.Hide),\n  onHidden: action(EventType.Hidden),\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onClosed: action(EventType.Close),\r\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onClick: action('onClick'),\r\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "AdditionalContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AdditionalContentTemplate.bind({})"
            },
            {
                "name": "AdditionalContentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    closed: actions.onClosed,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\" (closed)=\"onClosed($event)\">\r\n      <h4 class=\"alert-heading\">Well done!</h4>\r\n      <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n      <hr>\r\n      <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n    </desx-alert>\r\n  `,\r\n})",
                "rawdescription": "Additional template",
                "description": "<p>Additional template</p>\n"
            },
            {
                "name": "ALERT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AlertOptions>('Default Alert component options')"
            },
            {
                "name": "AlwaysOpen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Multi collapsible accordion",
                "description": "<p>Multi collapsible accordion</p>\n"
            },
            {
                "name": "BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ButtonOptions>('Default Button component options')"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/social-buttons/social-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/statistics/statistics.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/templates/user-profile/user-profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default Accordion",
                "description": "<p>Default Accordion</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "DEFAULT_ACCORDION_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AccordionOptions",
                "defaultValue": "{\n  flush: false,\n}",
                "rawdescription": "Default accordion component options",
                "description": "<p>Default accordion component options</p>\n"
            },
            {
                "name": "DEFAULT_ALERT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AlertOptions",
                "defaultValue": "{}",
                "rawdescription": "Default alert component options",
                "description": "<p>Default alert component options</p>\n"
            },
            {
                "name": "DEFAULT_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonOptions",
                "defaultValue": "{\r\n  isOutline: true,\r\n}",
                "rawdescription": "Default button component options",
                "description": "<p>Default button component options</p>\n"
            },
            {
                "name": "DEFAULT_COMPONENT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/components.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { provide: ACCORDION_OPTIONS, useValue: DEFAULT_ACCORDION_OPTIONS },\n  { provide: BUTTON_OPTIONS, useValue: DEFAULT_BUTTON_OPTIONS },\n  { provide: ALERT_OPTIONS, useValue: DEFAULT_ALERT_OPTIONS },\n  { provide: TEXTBOX_OPTIONS, useValue: DEFAULT_TEXTBOX_OPTIONS },\n  { provide: IMAGE_OPTIONS, useValue: DEFAULT_IMAGE_OPTIONS },\n]"
            },
            {
                "name": "DEFAULT_IMAGE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ImageOptions",
                "defaultValue": "{}",
                "rawdescription": "Default image component options",
                "description": "<p>Default image component options</p>\n"
            },
            {
                "name": "DEFAULT_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/profile/profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProfileOptions",
                "defaultValue": "{\r\n  showLink: true,\r\n}",
                "rawdescription": "Default profile component options",
                "description": "<p>Default profile component options</p>\n"
            },
            {
                "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/social-buttons/social-buttons.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SocialButtonOptions",
                "defaultValue": "{}",
                "rawdescription": "Default social buttons component options",
                "description": "<p>Default social buttons component options</p>\n"
            },
            {
                "name": "DEFAULT_STATISTICS_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/statistics/statistics.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StatisticsOptions",
                "defaultValue": "{}",
                "rawdescription": "Default statistics component options",
                "description": "<p>Default statistics component options</p>\n"
            },
            {
                "name": "DEFAULT_TEXTBOX_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TextboxOptions",
                "defaultValue": "{\r\n  floatingLabels: false,\r\n}",
                "rawdescription": "Default button component options",
                "description": "<p>Default button component options</p>\n"
            },
            {
                "name": "DEFAULT_USER_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/templates/user-profile/user-profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserProfileOptions",
                "defaultValue": "{}",
                "rawdescription": "Default user profile component options",
                "description": "<p>Default user profile component options</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n}"
            },
            {
                "name": "Floating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Floating labels",
                "description": "<p>Floating labels</p>\n"
            },
            {
                "name": "FloatingWithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Floating labels w/ value",
                "description": "<p>Floating labels w/ value</p>\n"
            },
            {
                "name": "Flushed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Flush Accordion",
                "description": "<p>Flush Accordion</p>\n"
            },
            {
                "name": "FormTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n})",
                "rawdescription": "This template uses TextboxWrapperComponent to wrap\r\ntextbox with form element",
                "description": "<p>This template uses TextboxWrapperComponent to wrap\ntextbox with form element</p>\n"
            },
            {
                "name": "IMAGE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ImageOptions>('Default Image component options')"
            },
            {
                "name": "OutlineDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default outlined story",
                "description": "<p>Default outlined story</p>\n"
            },
            {
                "name": "PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/profile/profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ProfileOptions>(\r\n  'Default profile component options'\r\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SOCIAL_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/social-buttons/social-buttons.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options'\r\n)"
            },
            {
                "name": "SOCIAL_BUTTONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/social-buttons/social-buttons.mocks.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { type: SocialButtonTypes.Facebook, link: 'https://facebook.com' },\r\n  { type: SocialButtonTypes.Skype, link: 'https://skype.com' },\r\n  { type: SocialButtonTypes.Linkedin, link: 'https://linkedin.com' },\r\n]"
            },
            {
                "name": "STATISTICS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/statistics/statistics.mocks.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Statistic[]",
                "defaultValue": "[\r\n  { value: 8471, text: 'Wallets Balance' },\r\n  { value: 8512, text: 'Income amounts' },\r\n  { value: 4751, text: 'Total Transactions' },\r\n]"
            },
            {
                "name": "STATISTICS_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/statistics/statistics.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options'\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/social-buttons/social-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/statistics/statistics.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/templates/user-profile/user-profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  show: actions.onShow,\n  shown: actions.onShown,\n  side: actions.onHide,\n  sidden: actions.onHidden,\n  template: `\n    <desx-accordion id=\"mainAccordion\" [options]=\"options\"\n      (show)=\"onShow($event)\" (shown)=\"onShown($event)\" (hide)=\"onHide($event)\" (hidden)=\"onHidden($event)\">\n      <desx-accordion-item id=\"item1\">\n        <ng-template desx-accordion-header>\n          Accordion Item #1\n        </ng-template>\n        <ng-template desx-accordion-content>\n          This is a test content\n        </ng-template>\n      </desx-accordion-item>\n      <desx-accordion-item id=\"item2\">\n        <ng-template desx-accordion-header>\n          Accordion Item #2\n        </ng-template>\n        <ng-template desx-accordion-content>\n          This is a test content\n        </ng-template>\n      </desx-accordion-item>\n    </desx-accordion>\n  `,\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\">\r\n      A simple primary alert—check it out!\r\n    </desx-alert>\r\n  `,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    click: actions.onClick,\r\n  },\r\n  template: `\r\n    <desx-button\r\n      [id]=\"id\"\r\n      [type]=\"type\"\r\n      [btnStyle]=\"style\"\r\n      [options]=\"options\"\r\n      (click)=\"onClick($event)\"\r\n    ><i class=\"bi bi-bag-plus\"></i>  Confirm your bags</desx-button>\r\n  `,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "TEXTBOX_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options'\r\n)"
            },
            {
                "name": "TextboxInForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormTemplate.bind({})",
                "rawdescription": "Textbox w/ form wrapper",
                "description": "<p>Textbox w/ form wrapper</p>\n"
            },
            {
                "name": "USER_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/templates/user-profile/user-profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options'\r\n)"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AlertTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"alert-primary\" | \"alert-secondary\" | \"alert-success\" | \"alert-danger\" | \"alert-warning\" | \"alert-info\" | \"alert-light\" | \"alert-dark\"",
                "file": "src/app/shared/components/alert/alert.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Type containing class definitions for different alert types</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | \"btn-lg\" | \"btn-sm\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Button sizes type</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonStyles",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Type containing class definitions for different button types</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"reset\" | \"submit\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Button types [submit, reset, button]</p>\n",
                "kind": 186
            },
            {
                "name": "ImageType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rounded\" | \"rounded-circle\"",
                "file": "src/app/shared/components/image/image.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TextboxSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | \"form-control-lg\" | \"form-control-sm\"",
                "file": "src/app/shared/components/textbox/textbox.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Add the relative form sizing classes to the .input-group itself and contents within will\nautomatically resize—no need for repeating the form control size classes on each element.</p>\n",
                "kind": 186
            },
            {
                "name": "TextboxType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"email\" | \"file\" | \"text\" | \"password\"",
                "file": "src/app/shared/components/textbox/textbox.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>HTML textbox types. Type contains only certain types and is extensible</p>\n",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "EventType",
                "childs": [
                    {
                        "name": "Show",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "show.bs.collapse"
                    },
                    {
                        "name": "Shown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "shown.bs.collapse"
                    },
                    {
                        "name": "Hide",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hide.bs.collapse"
                    },
                    {
                        "name": "Hidden",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hide.bs.collapse"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Bootstrap collapse events</p>\n",
                "file": "src/app/shared/components/accordion/accordion.models.ts"
            },
            {
                "name": "EventType",
                "childs": [
                    {
                        "name": "Close",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "close.bs.alert"
                    },
                    {
                        "name": "Closed",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "closed.bs.alert"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Alert events</p>\n",
                "file": "src/app/shared/components/alert/alert.models.ts"
            },
            {
                "name": "SocialButtonTypes",
                "childs": [
                    {
                        "name": "Facebook",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-facebook"
                    },
                    {
                        "name": "Twitter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-twitter"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-linkedin"
                    },
                    {
                        "name": "Skype",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-skype"
                    },
                    {
                        "name": "Instagram",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-instagram"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Includes predefined bootstrap icon classes for social buttons</p>\n",
                "file": "src/app/modules/social-buttons/social-buttons.models.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/accordion/accordion.options.ts": [
                {
                    "name": "ACCORDION_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AccordionOptions>(\n  'Default Accordion component options'\n)"
                },
                {
                    "name": "DEFAULT_ACCORDION_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionOptions",
                    "defaultValue": "{\n  flush: false,\n}",
                    "rawdescription": "Default accordion component options",
                    "description": "<p>Default accordion component options</p>\n"
                }
            ],
            "src/app/shared/components/accordion/accordion.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  onShow: action(EventType.Show),\n  onShown: action(EventType.Shown),\n  onHide: action(EventType.Hide),\n  onHidden: action(EventType.Hidden),\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "AlwaysOpen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Multi collapsible accordion",
                    "description": "<p>Multi collapsible accordion</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default Accordion",
                    "description": "<p>Default Accordion</p>\n"
                },
                {
                    "name": "Flushed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Flush Accordion",
                    "description": "<p>Flush Accordion</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: {\n    ...args,\n  },\n  show: actions.onShow,\n  shown: actions.onShown,\n  side: actions.onHide,\n  sidden: actions.onHidden,\n  template: `\n    <desx-accordion id=\"mainAccordion\" [options]=\"options\"\n      (show)=\"onShow($event)\" (shown)=\"onShown($event)\" (hide)=\"onHide($event)\" (hidden)=\"onHidden($event)\">\n      <desx-accordion-item id=\"item1\">\n        <ng-template desx-accordion-header>\n          Accordion Item #1\n        </ng-template>\n        <ng-template desx-accordion-content>\n          This is a test content\n        </ng-template>\n      </desx-accordion-item>\n      <desx-accordion-item id=\"item2\">\n        <ng-template desx-accordion-header>\n          Accordion Item #2\n        </ng-template>\n        <ng-template desx-accordion-content>\n          This is a test content\n        </ng-template>\n      </desx-accordion-item>\n    </desx-accordion>\n  `,\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/alert/alert.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onClosed: action(EventType.Close),\r\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "AdditionalContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AdditionalContentTemplate.bind({})"
                },
                {
                    "name": "AdditionalContentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    closed: actions.onClosed,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\" (closed)=\"onClosed($event)\">\r\n      <h4 class=\"alert-heading\">Well done!</h4>\r\n      <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n      <hr>\r\n      <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n    </desx-alert>\r\n  `,\r\n})",
                    "rawdescription": "Additional template",
                    "description": "<p>Additional template</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\">\r\n      A simple primary alert—check it out!\r\n    </desx-alert>\r\n  `,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onClick: action('onClick'),\r\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "OutlineDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default outlined story",
                    "description": "<p>Default outlined story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    click: actions.onClick,\r\n  },\r\n  template: `\r\n    <desx-button\r\n      [id]=\"id\"\r\n      [type]=\"type\"\r\n      [btnStyle]=\"style\"\r\n      [options]=\"options\"\r\n      (click)=\"onClick($event)\"\r\n    ><i class=\"bi bi-bag-plus\"></i>  Confirm your bags</desx-button>\r\n  `,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/alert/alert.options.ts": [
                {
                    "name": "ALERT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AlertOptions>('Default Alert component options')"
                },
                {
                    "name": "DEFAULT_ALERT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default alert component options",
                    "description": "<p>Default alert component options</p>\n"
                }
            ],
            "src/app/shared/components/button/button.options.ts": [
                {
                    "name": "BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ButtonOptions>('Default Button component options')"
                },
                {
                    "name": "DEFAULT_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonOptions",
                    "defaultValue": "{\r\n  isOutline: true,\r\n}",
                    "rawdescription": "Default button component options",
                    "description": "<p>Default button component options</p>\n"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/modules/profile/profile.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/modules/social-buttons/social-buttons.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/social-buttons/social-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/social-buttons/social-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/modules/statistics/statistics.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/statistics/statistics.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/statistics/statistics.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/templates/user-profile/user-profile.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/templates/user-profile/user-profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/templates/user-profile/user-profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/textbox/textbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Floating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Floating labels",
                    "description": "<p>Floating labels</p>\n"
                },
                {
                    "name": "FloatingWithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Floating labels w/ value",
                    "description": "<p>Floating labels w/ value</p>\n"
                },
                {
                    "name": "FormTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n})",
                    "rawdescription": "This template uses TextboxWrapperComponent to wrap\r\ntextbox with form element",
                    "description": "<p>This template uses TextboxWrapperComponent to wrap\ntextbox with form element</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                },
                {
                    "name": "TextboxInForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormTemplate.bind({})",
                    "rawdescription": "Textbox w/ form wrapper",
                    "description": "<p>Textbox w/ form wrapper</p>\n"
                }
            ],
            "src/app/shared/components/image/image.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/components.config.ts": [
                {
                    "name": "DEFAULT_COMPONENT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/components.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { provide: ACCORDION_OPTIONS, useValue: DEFAULT_ACCORDION_OPTIONS },\n  { provide: BUTTON_OPTIONS, useValue: DEFAULT_BUTTON_OPTIONS },\n  { provide: ALERT_OPTIONS, useValue: DEFAULT_ALERT_OPTIONS },\n  { provide: TEXTBOX_OPTIONS, useValue: DEFAULT_TEXTBOX_OPTIONS },\n  { provide: IMAGE_OPTIONS, useValue: DEFAULT_IMAGE_OPTIONS },\n]"
                }
            ],
            "src/app/shared/components/image/image.options.ts": [
                {
                    "name": "DEFAULT_IMAGE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default image component options",
                    "description": "<p>Default image component options</p>\n"
                },
                {
                    "name": "IMAGE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ImageOptions>('Default Image component options')"
                }
            ],
            "src/app/modules/profile/profile.options.ts": [
                {
                    "name": "DEFAULT_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/profile/profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileOptions",
                    "defaultValue": "{\r\n  showLink: true,\r\n}",
                    "rawdescription": "Default profile component options",
                    "description": "<p>Default profile component options</p>\n"
                },
                {
                    "name": "PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/profile/profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ProfileOptions>(\r\n  'Default profile component options'\r\n)"
                }
            ],
            "src/app/modules/social-buttons/social-buttons.options.ts": [
                {
                    "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/social-buttons/social-buttons.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default social buttons component options",
                    "description": "<p>Default social buttons component options</p>\n"
                },
                {
                    "name": "SOCIAL_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/social-buttons/social-buttons.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options'\r\n)"
                }
            ],
            "src/app/modules/statistics/statistics.options.ts": [
                {
                    "name": "DEFAULT_STATISTICS_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/statistics/statistics.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatisticsOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default statistics component options",
                    "description": "<p>Default statistics component options</p>\n"
                },
                {
                    "name": "STATISTICS_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/statistics/statistics.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options'\r\n)"
                }
            ],
            "src/app/shared/components/textbox/textbox.options.ts": [
                {
                    "name": "DEFAULT_TEXTBOX_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextboxOptions",
                    "defaultValue": "{\r\n  floatingLabels: false,\r\n}",
                    "rawdescription": "Default button component options",
                    "description": "<p>Default button component options</p>\n"
                },
                {
                    "name": "TEXTBOX_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options'\r\n)"
                }
            ],
            "src/app/templates/user-profile/user-profile.options.ts": [
                {
                    "name": "DEFAULT_USER_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/templates/user-profile/user-profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default user profile component options",
                    "description": "<p>Default user profile component options</p>\n"
                },
                {
                    "name": "USER_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/templates/user-profile/user-profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options'\r\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n}"
                }
            ],
            "src/app/modules/social-buttons/social-buttons.mocks.ts": [
                {
                    "name": "SOCIAL_BUTTONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/social-buttons/social-buttons.mocks.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { type: SocialButtonTypes.Facebook, link: 'https://facebook.com' },\r\n  { type: SocialButtonTypes.Skype, link: 'https://skype.com' },\r\n  { type: SocialButtonTypes.Linkedin, link: 'https://linkedin.com' },\r\n]"
                }
            ],
            "src/app/modules/statistics/statistics.mocks.ts": [
                {
                    "name": "STATISTICS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/statistics/statistics.mocks.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Statistic[]",
                    "defaultValue": "[\r\n  { value: 8471, text: 'Wallets Balance' },\r\n  { value: 8512, text: 'Income amounts' },\r\n  { value: 4751, text: 'Total Transactions' },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/shared/components/accordion/accordion.models.ts": [
                {
                    "name": "EventType",
                    "childs": [
                        {
                            "name": "Show",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "show.bs.collapse"
                        },
                        {
                            "name": "Shown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "shown.bs.collapse"
                        },
                        {
                            "name": "Hide",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hide.bs.collapse"
                        },
                        {
                            "name": "Hidden",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hide.bs.collapse"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Bootstrap collapse events</p>\n",
                    "file": "src/app/shared/components/accordion/accordion.models.ts"
                }
            ],
            "src/app/shared/components/alert/alert.models.ts": [
                {
                    "name": "EventType",
                    "childs": [
                        {
                            "name": "Close",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "close.bs.alert"
                        },
                        {
                            "name": "Closed",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "closed.bs.alert"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Alert events</p>\n",
                    "file": "src/app/shared/components/alert/alert.models.ts"
                }
            ],
            "src/app/modules/social-buttons/social-buttons.models.ts": [
                {
                    "name": "SocialButtonTypes",
                    "childs": [
                        {
                            "name": "Facebook",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-facebook"
                        },
                        {
                            "name": "Twitter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-twitter"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-linkedin"
                        },
                        {
                            "name": "Skype",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-skype"
                        },
                        {
                            "name": "Instagram",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-instagram"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Includes predefined bootstrap icon classes for social buttons</p>\n",
                    "file": "src/app/modules/social-buttons/social-buttons.models.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/components/alert/alert.models.ts": [
                {
                    "name": "AlertTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"alert-primary\" | \"alert-secondary\" | \"alert-success\" | \"alert-danger\" | \"alert-warning\" | \"alert-info\" | \"alert-light\" | \"alert-dark\"",
                    "file": "src/app/shared/components/alert/alert.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Type containing class definitions for different alert types</p>\n",
                    "kind": 186
                }
            ],
            "src/app/shared/components/button/button.models.ts": [
                {
                    "name": "ButtonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | \"btn-lg\" | \"btn-sm\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Button sizes type</p>\n",
                    "kind": 186
                },
                {
                    "name": "ButtonStyles",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Type containing class definitions for different button types</p>\n",
                    "kind": 186
                },
                {
                    "name": "ButtonTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"reset\" | \"submit\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Button types [submit, reset, button]</p>\n",
                    "kind": 186
                }
            ],
            "src/app/shared/components/image/image.models.ts": [
                {
                    "name": "ImageType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rounded\" | \"rounded-circle\"",
                    "file": "src/app/shared/components/image/image.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/components/textbox/textbox.models.ts": [
                {
                    "name": "TextboxSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | \"form-control-lg\" | \"form-control-sm\"",
                    "file": "src/app/shared/components/textbox/textbox.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Add the relative form sizing classes to the .input-group itself and contents within will\nautomatically resize—no need for repeating the form control size classes on each element.</p>\n",
                    "kind": 186
                },
                {
                    "name": "TextboxType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"email\" | \"file\" | \"text\" | \"password\"",
                    "file": "src/app/shared/components/textbox/textbox.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>HTML textbox types. Type contains only certain types and is extensible</p>\n",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 51,
        "status": "good",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/profile/profile.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProfileComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/profile/profile.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProfileOptions",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/profile/profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PROFILE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/profile/profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROFILE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SocialButtonsComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.mocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SOCIAL_BUTTONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialButton",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialButtonOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SOCIAL_BUTTON_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/social-buttons/social-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StatisticComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatisticsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.mocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATISTICS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Statistic",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatisticsOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_STATISTICS_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATISTICS_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/statistics/statistics.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AccordionComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AccordionOptions",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACCORDION_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_ACCORDION_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AlwaysOpen",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flushed",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-content.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionHeaderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AlertComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AlertOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ALERT_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_ALERT_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdditionalContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdditionalContentTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ButtonComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "5/10",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonOptions",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_BUTTON_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineDefault",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/pipes/button-style.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ButtonStylePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/components.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_COMPONENT_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/image/image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ImageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_IMAGE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IMAGE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TextboxComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "7/14",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TextboxOptions",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_TEXTBOX_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEXTBOX_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Floating",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FloatingWithValue",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextboxInForm",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/testing/component.base-fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ComponentBaseFixture",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfile",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfileOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_USER_PROFILE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USER_PROFILE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/templates/user-profile/user-profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}