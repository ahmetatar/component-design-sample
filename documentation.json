{
    "pipes": [
        {
            "name": "ButtonStylePipe",
            "id": "pipe-ButtonStylePipe-b4f9669044d101e4b9a99581661f92b7552baece66621390ae2126e7abbd13ab7ddd40da12f2ae3d39396b9bf24e5365fc167cd99e8e1a833a20ebb78df0bbde",
            "file": "src/app/shared/components/button/pipes/button-style.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "ButtonStyles",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "Partial<ButtonOptions> | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIt transforms given class name by outline option\n\n",
                    "description": "<p>It transforms given class name by outline option</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 332,
                                "end": 337,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "ButtonStyles",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 326,
                                "end": 331,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>takes one of ButtonStyles type values</p>\n"
                        },
                        {
                            "name": {
                                "pos": 389,
                                "end": 396,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "options"
                            },
                            "type": "Partial<ButtonOptions> | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 383,
                                "end": 388,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>takes ButtonOptions</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 424,
                                "end": 431,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>transformed class name</p>\n"
                        }
                    ]
                }
            ],
            "ngname": "buttonStyle",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ButtonStyles } from '../button.models';\r\nimport { ButtonOptions } from '../button.options';\r\n\r\n@Pipe({\r\n  name: 'buttonStyle',\r\n})\r\nexport class ButtonStylePipe implements PipeTransform {\r\n  /**\r\n   * It transforms given class name by outline option\r\n   *\r\n   * @param value takes one of ButtonStyles type values\r\n   * @param options takes ButtonOptions\r\n   * @returns transformed class name\r\n   */\r\n  transform(value: ButtonStyles, options: Partial<ButtonOptions> | undefined): string {\r\n    return options?.isOutline ? `btn-outline-${value}` : `btn-${value}`;\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AccordionOptions",
            "id": "interface-AccordionOptions-e58812c73e51e27fb493b0caa5c3fc7ae61bbdd5893e0dd2a118649e6ce0f04a354e2ee77fe0297b623aa8acb8445a221b0483aa93d1cd533da41f2af8ae3f64",
            "file": "src/app/shared/components/accordion/accordion.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Accordion options provide settings to control the display and behavior of the component\r\n */\r\nexport interface AccordionOptions {\r\n  /**\r\n   * Add .accordion-flush to remove the default background-color, some borders,\r\n   * and some rounded corners to render accordions edge-to-edge with their parent container.\r\n   *\r\n   * @link https://getbootstrap.com/docs/5.0/components/accordion/#flush\r\n   */\r\n  flush?: boolean;\r\n\r\n  /**\r\n   * Allows accordion item's parent to be set to null.\r\n   * Thus, more than one item content can be displayed at the same time.\r\n   */\r\n  alwaysOpen?: boolean;\r\n}\r\n\r\n/**\r\n * Default accordion component options\r\n */\r\nexport const DEFAULT_ACCORDION_OPTIONS: AccordionOptions = {\r\n  flush: false,\r\n};\r\n\r\nexport const ACCORDION_OPTIONS = new InjectionToken<AccordionOptions>(\r\n  'Default Accordion component options',\r\n);\r\n",
            "properties": [
                {
                    "name": "alwaysOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Allows accordion item&#39;s parent to be set to null.\nThus, more than one item content can be displayed at the same time.</p>\n",
                    "line": 19,
                    "rawdescription": "\n\nAllows accordion item's parent to be set to null.\nThus, more than one item content can be displayed at the same time.\n"
                },
                {
                    "name": "flush",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Add .accordion-flush to remove the default background-color, some borders,\nand some rounded corners to render accordions edge-to-edge with their parent container.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nAdd .accordion-flush to remove the default background-color, some borders,\nand some rounded corners to render accordions edge-to-edge with their parent container.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 383,
                            "end": 455,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 384,
                                "end": 388,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/components/accordion/#flush\">https://getbootstrap.com/docs/5.0/components/accordion/#flush</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Accordion options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nAccordion options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "AlertOptions",
            "id": "interface-AlertOptions-3c77b97e0c4ebef3b56b64b4871883ff450f7c82c54b241e6d706be1e2eabb8a45e1d74ecc25a41b718c708db22028ac4ab980acc363a1abef09c3ec07c9beae",
            "file": "src/app/shared/components/alert/alert.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface AlertOptions {}\r\n\r\n/**\r\n * Default alert component options\r\n */\r\nexport const DEFAULT_ALERT_OPTIONS: AlertOptions = {};\r\n\r\nexport const ALERT_OPTIONS = new InjectionToken<AlertOptions>('Default Alert component options');\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "ButtonOptions",
            "id": "interface-ButtonOptions-e0c77ea95f483987755029ff20ceb8ab2c15cd8c1df9f62c7d275842097be16d0d5ddd66d23cdacb3fce09e8213a315a6e123a3edf29ecfa1064c79fe93fcbe3",
            "file": "src/app/shared/components/button/button.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Button options provide settings to control the display and behavior of the component\r\n */\r\nexport interface ButtonOptions {\r\n  /**\r\n   * Replaces the default modifier classes with the .btn-outline-* ones to remove all\r\n   * background images and colors on any button.\r\n   *\r\n   * @link https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons\r\n   */\r\n  isOutline: boolean;\r\n}\r\n\r\n/**\r\n * Default button component options\r\n */\r\nexport const DEFAULT_BUTTON_OPTIONS: ButtonOptions = {\r\n  isOutline: true,\r\n};\r\n\r\nexport const BUTTON_OPTIONS = new InjectionToken<ButtonOptions>('Default Button component options');\r\n",
            "properties": [
                {
                    "name": "isOutline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Replaces the default modifier classes with the .btn-outline-* ones to remove all\nbackground images and colors on any button.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nReplaces the default modifier classes with the .btn-outline-* ones to remove all\nbackground images and colors on any button.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 339,
                            "end": 419,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 340,
                                "end": 344,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons\">https://getbootstrap.com/docs/5.0/components/buttons/#outline-buttons</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Button options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nButton options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "ImageOptions",
            "id": "interface-ImageOptions-125660ff25a142bc81c66b27de22b93b70624b8bb26fb1eb4deaa5c117626e3c1223f871c502ec51b1a6d8f6cad86cff409bba3a5f5d8b3f2b5de25bb6108aac",
            "file": "src/app/shared/components/image/image.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ImageOptions {}\r\n\r\n/**\r\n * Default image component options\r\n */\r\nexport const DEFAULT_IMAGE_OPTIONS: ImageOptions = {};\r\n\r\nexport const IMAGE_OPTIONS = new InjectionToken<ImageOptions>('Default Image component options');\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Profile",
            "id": "interface-Profile-38364ca368227c81d93c9b7217ee42b1f5ff0e26b31171ae3e3c727bb7e1ebe7aeb9cb4520bc9f7ee9795d58e6403725f67853983adfc5a40a0e8bdd58d461cb",
            "file": "src/app/components/profile/profile.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Profile {\r\n  profileImage: string;\r\n  userName: string;\r\n  fullName: string;\r\n  link?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "profileImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProfileOptions",
            "id": "interface-ProfileOptions-cdf389d529a055dcc793790b91930a7fbc8105e0db11565a18dd0f1c998189cd9118f3779c84a3eec5af583456c5e76b22afb6561b7587cb7dc61081b21a7c54",
            "file": "src/app/components/profile/profile.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ProfileOptions {\r\n  /**\r\n   * Determines whether the web site link will appear in\r\n   * the user profile.\r\n   */\r\n  showLink: boolean;\r\n}\r\n\r\n/**\r\n * Default profile component options\r\n */\r\nexport const DEFAULT_PROFILE_OPTIONS: ProfileOptions = {\r\n  showLink: true,\r\n};\r\n\r\nexport const PROFILE_OPTIONS = new InjectionToken<ProfileOptions>(\r\n  'Default profile component options',\r\n);\r\n",
            "properties": [
                {
                    "name": "showLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Determines whether the web site link will appear in\nthe user profile.</p>\n",
                    "line": 8,
                    "rawdescription": "\n\nDetermines whether the web site link will appear in\nthe user profile.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SocialButton",
            "id": "interface-SocialButton-fef90fd70df240c8db2a749b95ad312b9fad98bd4c1324c38539d81cab81c391f547ddc301e85118d4ff49a6bb01551a827f2d1254a653f946207812d45e1b87",
            "file": "src/app/components/social-buttons/social-buttons.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum SocialButtonTypes {\r\n  Facebook = 'bi-facebook',\r\n  Twitter = 'bi-twitter',\r\n  Linkedin = 'bi-linkedin',\r\n  Skype = 'bi-skype',\r\n  Instagram = 'bi-instagram',\r\n}\r\n\r\n/**\r\n * Social button model\r\n */\r\nexport interface SocialButton {\r\n  type: SocialButtonTypes;\r\n  link: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonTypes",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Social button model</p>\n",
            "rawdescription": "\n\nSocial button model\n",
            "methods": []
        },
        {
            "name": "SocialButtonOptions",
            "id": "interface-SocialButtonOptions-ebdf725f3b5df74827440b6d1848441389b9429554e1b616fd4d26416c945af8fc2dbe702351b4d57b92e15bcd38ceb98d5143bbc905a06d8d3ad3b74976e9d6",
            "file": "src/app/components/social-buttons/social-buttons.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface SocialButtonOptions {}\r\n\r\n/**\r\n * Default social buttons component options\r\n */\r\nexport const DEFAULT_SOCIAL_BUTTON_OPTIONS: SocialButtonOptions = {};\r\n\r\nexport const SOCIAL_BUTTON_OPTIONS = new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options',\r\n);\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Statistic",
            "id": "interface-Statistic-5666e17d159b238b4853fc386930f1d06d14051bfdb92918b53c402f36faad53efa6c7587dea51147c8c94ca070ee696f77474c0d25c81726afa96704628c1c6",
            "file": "src/app/components/statistics/statistics.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Statistic {\r\n  value: number;\r\n  text: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Defines a statistic model consisting of a value and a description</p>\n",
            "rawdescription": "\n\nDefines a statistic model consisting of a value and a description\n",
            "methods": []
        },
        {
            "name": "StatisticsOptions",
            "id": "interface-StatisticsOptions-322217dd9fed2458fb61c1607edce1379897836d86bf59b78ef273b8a9f98dd00ad5f9d131f1ec3a72697bea05004c465cdf0bc2c9e392cfffe76463f14cb886",
            "file": "src/app/components/statistics/statistics.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface StatisticsOptions {}\r\n\r\n/**\r\n * Default statistics component options\r\n */\r\nexport const DEFAULT_STATISTICS_OPTIONS: StatisticsOptions = {};\r\n\r\nexport const STATISTICS_OPTIONS = new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options',\r\n);\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "TextboxOptions",
            "id": "interface-TextboxOptions-911da6a0ad55593904dd31e4276a441cc8088adc435bda35e3c65842dc21625e00011c3b0861d71e71067af68563f9c90cce4bea2fac52a43197c04edf7d6e9d",
            "file": "src/app/shared/components/textbox/textbox.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Textbox options provide settings to control the display and behavior of the component\r\n */\r\nexport interface TextboxOptions {\r\n  /**\r\n   * Wraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\r\n   * to enable floating labels with Bootstrap’s textual form fields.\r\n   *\r\n   * @link https://getbootstrap.com/docs/5.0/forms/floating-labels/\r\n   */\r\n  floatingLabels: boolean;\r\n}\r\n\r\n/**\r\n * Default button component options\r\n */\r\nexport const DEFAULT_TEXTBOX_OPTIONS: TextboxOptions = {\r\n  floatingLabels: false,\r\n};\r\n\r\nexport const TEXTBOX_OPTIONS = new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options',\r\n);\r\n",
            "properties": [
                {
                    "name": "floatingLabels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Wraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\nto enable floating labels with Bootstrap’s textual form fields.</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nWraps a pair of <input class=\"form-control\"> and <label> elements in .form-floating\nto enable floating labels with Bootstrap’s textual form fields.\n\n",
                    "jsdoctags": [
                        {
                            "pos": 364,
                            "end": 431,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 365,
                                "end": 369,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "link"
                            },
                            "comment": "<p><a href=\"https://getbootstrap.com/docs/5.0/forms/floating-labels/\">https://getbootstrap.com/docs/5.0/forms/floating-labels/</a></p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Textbox options provide settings to control the display and behavior of the component</p>\n",
            "rawdescription": "\n\nTextbox options provide settings to control the display and behavior of the component\n",
            "methods": []
        },
        {
            "name": "UserProfile",
            "id": "interface-UserProfile-81e685412579d4ca2e89a77ec28c978773d4156b46c2c1545730899a6d7291db0440eea4b2e139e0b38e240626d3fa2d9c58bf5c78deff08a22633ea5832615f",
            "file": "src/app/modules/user-profile/presenter/user-profile-pres.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Profile } from '@components/profile/profile.models';\r\nimport { SocialButton } from '@components/social-buttons/social-buttons.models';\r\nimport { Statistic } from '@components/statistics/statistics.models';\r\n\r\n/**\r\n * User profile view model\r\n */\r\nexport interface UserProfile {\r\n  profile: Profile;\r\n  socialLinks: SocialButton[];\r\n  statistics: Statistic[];\r\n}\r\n",
            "properties": [
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Profile",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "socialLinks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButton[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "statistics",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Statistic[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>User profile view model</p>\n",
            "rawdescription": "\n\nUser profile view model\n",
            "methods": []
        },
        {
            "name": "UserProfileOptions",
            "id": "interface-UserProfileOptions-4c9bd5da8a2f49cc5fe2d832cbd906bf90f47184792c9e8b9746904deb96a3f502ad42dea6502d3b88373f20345fc2f5392e71cc472610a467033c0478685514",
            "file": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\nimport { ButtonOptions } from '@app/shared/components/button/button.options';\r\nimport { ProfileOptions } from '@components/profile/profile.options';\r\nimport { SocialButtonOptions } from '@components/social-buttons/social-buttons.options';\r\nimport { StatisticsOptions } from '@components/statistics/statistics.options';\r\n\r\nexport interface UserProfileOptions {\r\n  profileOptions?: ProfileOptions;\r\n  socialButtonsOptions?: SocialButtonOptions;\r\n  statisticsOptions?: StatisticsOptions;\r\n  buttonOptions?: ButtonOptions;\r\n}\r\n\r\n/**\r\n * Default user profile component options\r\n */\r\nexport const DEFAULT_USER_PROFILE_OPTIONS: UserProfileOptions = {};\r\n\r\nexport const USER_PROFILE_OPTIONS = new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options',\r\n);\r\n",
            "properties": [
                {
                    "name": "buttonOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonOptions",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "profileOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileOptions",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "socialButtonsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonOptions",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "statisticsOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatisticsOptions",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AccordionComponentFixture",
            "id": "class-AccordionComponentFixture-588fc1eda70b9ccf13fa192a7d97787db96d536bbe5df08f27cabe386fbb1f905584d8285438963005015bc5ff87f2ba4fa4371bfc3ebf27f5922a205f66a779",
            "file": "src/app/shared/components/accordion/accordion.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class AccordionComponentFixture extends ComponentBaseFixture {\r\n  protected readonly ACCORDION_FLUSH = '.accordion-flush';\r\n  protected readonly ACCORDION_ITEMS = 'desx-accordion .accordion-item';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns accordion items\r\n   * @returns {HTMLDivElement[] | null} HTMLDivElement array of accordion items\r\n   */\r\n  public getAccordionItems(): HTMLDivElement[] | null {\r\n    return this.getElementAll(this.ACCORDION_ITEMS);\r\n  }\r\n\r\n  /**\r\n   * Returns accordion flush container\r\n   * @returns {HTMLDivElement | null} HTMLDivElement of accordion flush container\r\n   */\r\n  public getAccordionFlushContainer(): HTMLDivElement | null {\r\n    return this.getElement(this.ACCORDION_FLUSH);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "ACCORDION_FLUSH",
                    "defaultValue": "'.accordion-flush'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "ACCORDION_ITEMS",
                    "defaultValue": "'desx-accordion .accordion-item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAccordionFlushContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns accordion flush container\n",
                    "description": "<p>Returns accordion flush container</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 698,
                                "end": 705,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement of accordion flush container</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getAccordionItems",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns accordion items\n",
                    "description": "<p>Returns accordion items</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 445,
                                "end": 452,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement array of accordion items</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AlertComponentFixture",
            "id": "class-AlertComponentFixture-9096b2d9d8c6202c43287840813bd97bc709c6877d9e31a05f34a698ecd5853037872f5fb12121d0bb33c1ca62fd0b2271058bc52559ebe72c50de919bb41836",
            "file": "src/app/shared/components/alert/alert.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class AlertComponentFixture extends ComponentBaseFixture {\r\n  protected readonly ALERT_DISMISSIBLE = '.alert-dismissible';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns alert dismissible element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement of dismissible\r\n   */\r\n  public getDismissibleAlert(): HTMLDivElement[] | null {\r\n    return this.getElement(this.ALERT_DISMISSIBLE);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "ALERT_DISMISSIBLE",
                    "defaultValue": "'.alert-dismissible'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDismissibleAlert",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns alert dismissible element\n",
                    "description": "<p>Returns alert dismissible element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 381,
                                "end": 388,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement of dismissible</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ButtonComponentFixture",
            "id": "class-ButtonComponentFixture-ccbeeea035638361c1b7376b72475dcdafaccc6cd946211401bfb258d4ff9a503c4e07f211e43be7905e39cd3be4fc9afba8015b543b0e4acdc777cf2d8e429e",
            "file": "src/app/shared/components/button/button.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class ButtonComponentFixture extends ComponentBaseFixture {\r\n  protected readonly OUTLINED_PRIMARY_BUTTON = '.btn-outline-primary';\r\n  protected readonly LARGE_BUTTON = '.btn-lg';\r\n  protected readonly WARNING_BUTTON = '.btn-warning';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .btn-warning applied button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getWarningButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.WARNING_BUTTON);\r\n  }\r\n\r\n  /**\r\n   * Returns .btn-lg applied button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getLargeButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.LARGE_BUTTON);\r\n  }\r\n\r\n  /**\r\n   * Returns outlined primary button element\r\n   * @returns {HTMLButtonElement | null} HTMLButtonElement\r\n   */\r\n  public getOutlinedPrimaryButton(): HTMLButtonElement | null {\r\n    return this.getElement(this.OUTLINED_PRIMARY_BUTTON);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "LARGE_BUTTON",
                    "defaultValue": "'.btn-lg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "OUTLINED_PRIMARY_BUTTON",
                    "defaultValue": "'.btn-outline-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "WARNING_BUTTON",
                    "defaultValue": "'.btn-warning'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLargeButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .btn-lg applied button element\n",
                    "description": "<p>Returns .btn-lg applied button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 736,
                                "end": 743,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getOutlinedPrimaryButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns outlined primary button element\n",
                    "description": "<p>Returns outlined primary button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 966,
                                "end": 973,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getWarningButton",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLButtonElement | null",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .btn-warning applied button element\n",
                    "description": "<p>Returns .btn-warning applied button element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 503,
                                "end": 510,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLButtonElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ComponentBaseFixture",
            "id": "class-ComponentBaseFixture-b9f69a417a9c52d981bfcd2ef65eac050c4ac5d91e5909f0e9ac7dd514fd717578879b9067043fda32fd7e65f9920e65537c8a4d89d8285f386fe568cfa83070",
            "file": "src/app/shared/testing/component.base-fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { By } from '@angular/platform-browser';\r\n\r\nexport abstract class ComponentBaseFixture {\r\n  constructor(private debugEl: DebugElement) {}\r\n\r\n  /**\r\n   * Returns nativeElement of queried element\r\n   * @param selector element selector\r\n   * @returns NativeElement\r\n   */\r\n  public getElement<T>(selector: string) {\r\n    const element = this.debugEl.query(By.css(selector));\r\n    return element ? (element.nativeElement as T) : null;\r\n  }\r\n\r\n  /**\r\n   * Returns nativeElement list of queried element\r\n   * @param selector element selector\r\n   * @returns NativeElement list\r\n   */\r\n  public getElementAll<T>(selector: string) {\r\n    const elements = this.debugEl.queryAll(By.css(selector));\r\n    return elements ? elements.map((el) => el.nativeElement as T) : null;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "debugEl",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "debugEl",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ]
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ImageComponentFixture",
            "id": "class-ImageComponentFixture-1b655f7c4974ecf198f778bc1b887fa175583610833c341eb95deeab9195ddbb941888c2e611a36a82115263fb7d57a12777f4b3ee2a6d99257ce56f1c5cd748",
            "file": "src/app/shared/components/image/image.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class ImageComponentFixture extends ComponentBaseFixture {\r\n  protected readonly IMAGE_FLUID_SELECTOR = '.img-fluid';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .img-fluid applied input element\r\n   * @returns {HTMLImageElement | null}\r\n   */\r\n  public getImage(): HTMLImageElement | null {\r\n    return this.getElement(this.IMAGE_FLUID_SELECTOR);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "IMAGE_FLUID_SELECTOR",
                    "defaultValue": "'.img-fluid'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getImage",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLImageElement | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .img-fluid applied input element\n",
                    "description": "<p>Returns .img-fluid applied input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 383,
                                "end": 390,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProfileComponentFixture",
            "id": "class-ProfileComponentFixture-270fee34534b3e22697e3216f28670176994634c9cc8a6525e6cf555c058272e4c92f327d6c936142900d196065a097dc3c8a8fcf20c774985508ed0e1e27bcf",
            "file": "src/app/components/profile/profile.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class ProfileComponentFixture extends ComponentBaseFixture {\r\n  protected readonly PROFILE_USER_LINK = '.profile-user-link';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns user profile link\r\n   * @returns {HTMLAnchorElement | null} HTMLAnchorElement\r\n   */\r\n  public getUserLink(): HTMLAnchorElement | null {\r\n    return this.getElement(this.PROFILE_USER_LINK);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "PROFILE_USER_LINK",
                    "defaultValue": "'.profile-user-link'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserLink",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLAnchorElement | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns user profile link\n",
                    "description": "<p>Returns user profile link</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 384,
                                "end": 391,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLAnchorElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SocialButtonsComponentFixture",
            "id": "class-SocialButtonsComponentFixture-12e2da71d475a149616cdede8041d288327701eda706984615a393c1de8640de01f21dc8a451e9af840a786c4889e9c54b194bb61b0dc3b6c289cd82e0b6ebf5",
            "file": "src/app/components/social-buttons/social-buttons.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class SocialButtonsComponentFixture extends ComponentBaseFixture {\r\n  protected readonly SOCIAL_BUTTONS = '.social-buttons desx-button';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns all button element under social buttons container\r\n   * @returns {HTMLButtonElement[] | null} social button elements\r\n   */\r\n  public getButtons(): HTMLButtonElement[] | null {\r\n    return this.getElementAll(this.SOCIAL_BUTTONS);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "SOCIAL_BUTTONS",
                    "defaultValue": "'.social-buttons desx-button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getButtons",
                    "args": [],
                    "optional": false,
                    "returnType": "[] | null",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns all button element under social buttons container\n",
                    "description": "<p>Returns all button element under social buttons container</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 428,
                                "end": 435,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>social button elements</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StatisticComponentFixture",
            "id": "class-StatisticComponentFixture-d7159620f6c6df02e3b019c682618d3cecd89d5724c74bdf4da2aa4137858b8b5319c355a91442a7337309d40dbc44b0519465bc32dee5803ba5fd1abde3cbcd",
            "file": "src/app/components/statistics/statistics.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from 'src/app/shared/testing/component.base-fixture';\r\n\r\nexport class StatisticComponentFixture extends ComponentBaseFixture {\r\n  protected readonly STATISTIC_COLUMNS = '.statistics .statistic-item';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns statistic columns\r\n   */\r\n  public getStatisticItems() {\r\n    return this.getElementAll(this.STATISTIC_COLUMNS);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "STATISTIC_COLUMNS",
                    "defaultValue": "'.statistics .statistic-item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getStatisticItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns statistic columns\n",
                    "description": "<p>Returns statistic columns</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TextboxComponentFixture",
            "id": "class-TextboxComponentFixture-b07697f0d8399acf2ed14ddfed3c108a8fca36bec6cec90b442a7ec373704374961bc9f36e5c01c53a7fab8a95cb6fede7ddb55caaa76b76f86bdce4d0c35f75",
            "file": "src/app/shared/components/textbox/textbox.component.fixture.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DebugElement } from '@angular/core';\r\nimport { ComponentBaseFixture } from '../../testing/component.base-fixture';\r\n\r\nexport class TextboxComponentFixture extends ComponentBaseFixture {\r\n  protected readonly FORM_CONTROL = '.form-control';\r\n  protected readonly FLOATING_LABELED_FORM_CONTROL = '.form-floating';\r\n  protected readonly BASE_INPUT = 'input';\r\n  protected readonly VALID_FEEDBACK_DIV = '.valid-feedback';\r\n  protected readonly INVALID_FEEDBACK_DIV = '.invalid-feedback';\r\n\r\n  constructor(element: DebugElement) {\r\n    super(element);\r\n  }\r\n\r\n  /**\r\n   * Returns .form-control applied input element\r\n   * @returns {HTMLInputElement | null} HTMLDivElement\r\n   */\r\n  public getFormControl(): HTMLInputElement | null {\r\n    return this.getElement(this.FORM_CONTROL);\r\n  }\r\n\r\n  /**\r\n   * Returns form-floating wrapper element if textbox is floating control\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getFloatingContainer(): HTMLDivElement | null {\r\n    return this.getElement(this.FLOATING_LABELED_FORM_CONTROL);\r\n  }\r\n\r\n  /**\r\n   * Returns base input element\r\n   * @returns {HTMLInputElement | null} HTMLInputElement\r\n   */\r\n  public getInput(): HTMLInputElement | null {\r\n    return this.getElement(this.BASE_INPUT);\r\n  }\r\n\r\n  /**\r\n   * Returns valid feedback element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getValidFeedback(): HTMLDivElement | null {\r\n    return this.getElement(this.VALID_FEEDBACK_DIV);\r\n  }\r\n\r\n  /**\r\n   * Returns invalid feedback element\r\n   * @returns {HTMLDivElement | null} HTMLDivElement\r\n   */\r\n  public getInvalidFeedback(): HTMLDivElement | null {\r\n    return this.getElement(this.INVALID_FEEDBACK_DIV);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "DebugElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "BASE_INPUT",
                    "defaultValue": "'input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "FLOATING_LABELED_FORM_CONTROL",
                    "defaultValue": "'.form-floating'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "FORM_CONTROL",
                    "defaultValue": "'.form-control'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "INVALID_FEEDBACK_DIV",
                    "defaultValue": "'.invalid-feedback'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "VALID_FEEDBACK_DIV",
                    "defaultValue": "'.valid-feedback'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getFloatingContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns form-floating wrapper element if textbox is floating control\n",
                    "description": "<p>Returns form-floating wrapper element if textbox is floating control</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 881,
                                "end": 888,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLInputElement | null",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns .form-control applied input element\n",
                    "description": "<p>Returns .form-control applied input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 627,
                                "end": 634,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getInput",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLInputElement | null",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns base input element\n",
                    "description": "<p>Returns base input element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1112,
                                "end": 1119,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLInputElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getInvalidFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns invalid feedback element\n",
                    "description": "<p>Returns invalid feedback element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1544,
                                "end": 1551,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getValidFeedback",
                    "args": [],
                    "optional": false,
                    "returnType": "HTMLDivElement | null",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns valid feedback element\n",
                    "description": "<p>Returns valid feedback element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1322,
                                "end": 1329,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>HTMLDivElement</p>\n",
                            "returnType": ""
                        }
                    ]
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement of queried element\n",
                    "description": "<p>Returns nativeElement of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 261,
                                "end": 269,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 255,
                                "end": 260,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 294,
                                "end": 301,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                },
                {
                    "name": "getElementAll",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReturns nativeElement list of queried element\n",
                    "description": "<p>Returns nativeElement list of queried element</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 564,
                                "end": 572,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "selector"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 558,
                                "end": 563,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>element selector</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 597,
                                "end": 604,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>NativeElement list</p>\n"
                        }
                    ],
                    "inheritance": {
                        "file": "ComponentBaseFixture"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "ComponentBaseFixture",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AccordionContentDirective",
            "id": "directive-AccordionContentDirective-c80e6de5c5129cd8f0e9cd25ee21f6c274bddba5c714ec51f61aba5582e1036af4c8895bb5e63cbe3aae5d722456002fd1ae16e0333eb0b4a5c7b44b102d599f",
            "file": "src/app/shared/components/accordion/directives/accordion-content.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ng-template[desxAccordionContent]',\r\n})\r\nexport class AccordionContentDirective {\r\n  constructor(public tmplRef: TemplateRef<any>) {}\r\n}\r\n",
            "selector": "ng-template[desxAccordionContent]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tmplRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AccordionHeaderDirective",
            "id": "directive-AccordionHeaderDirective-d786dbfda613c50f944df15eaf5daf7c503605e3e6aa67cc9da4fd2be34b74f3248920b6b2e27a68b1fe9ed3826a6c0ce5c2071f54df5e64c0fb544e440b5df7",
            "file": "src/app/shared/components/accordion/directives/accordion-header.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'ng-template[desxAccordionHeader]',\r\n})\r\nexport class AccordionHeaderDirective {\r\n  constructor(public tmplRef: TemplateRef<any>) {}\r\n}\r\n",
            "selector": "ng-template[desxAccordionHeader]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tmplRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "AccordionItemDirective",
            "id": "directive-AccordionItemDirective-f978d136f63bb2f3484105d30c688875dece0002a9958379cbaf70761685ae30e92188655dd5477ba8e5a152eb7ce65719d4988f99f3cd9c1f53863e28291964",
            "file": "src/app/shared/components/accordion/directives/accordion-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterContentInit, ContentChildren, Directive, Input, QueryList } from '@angular/core';\r\nimport { AccordionContentDirective } from './accordion-content.directive';\r\nimport { AccordionHeaderDirective } from './accordion-header.directive';\r\n\r\n@Directive({\r\n  // eslint-disable-next-line @angular-eslint/directive-selector\r\n  selector: 'desx-accordion-item',\r\n})\r\nexport class AccordionItemDirective implements AfterContentInit {\r\n  headerTmpl!: AccordionHeaderDirective;\r\n  contentTmpl!: AccordionContentDirective;\r\n\r\n  @Input()\r\n  id!: string;\r\n\r\n  @Input()\r\n  show: boolean = false;\r\n\r\n  @ContentChildren(AccordionHeaderDirective, { descendants: true })\r\n  headerTmpls!: QueryList<AccordionHeaderDirective>;\r\n\r\n  @ContentChildren(AccordionContentDirective, { descendants: true })\r\n  contentTmpls!: QueryList<AccordionContentDirective>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.headerTmpl = this.headerTmpls.first;\r\n    this.contentTmpl = this.contentTmpls.first;\r\n  }\r\n}\r\n",
            "selector": "desx-accordion-item",
            "providers": [],
            "inputsClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "contentTmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionContentDirective",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "contentTmpls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionContentDirective>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionContentDirective, {descendants: true}"
                        }
                    ]
                },
                {
                    "name": "headerTmpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionHeaderDirective",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "headerTmpls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionHeaderDirective>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionHeaderDirective, {descendants: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "AfterContentInit"
            ]
        }
    ],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-ddf2ad0adcc961d3324866b74f9ec453871233c51ac4e679a11e71a723231cf2a08a33d1f15db8a6931724d36adf2428e1c2567511bd334316910c0151b344b8",
            "file": "src/app/shared/components/accordion/accordion.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-accordion",
            "styleUrls": [
                "./accordion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Partial<AccordionOptions>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "hidden",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                },
                {
                    "name": "hide",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                },
                {
                    "name": "show",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                },
                {
                    "name": "shown",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<AccordionItemDirective>",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AccordionItemDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { AccordionItemDirective } from './directives/accordion-item.directive';\r\nimport { EventType } from './accordion.models';\r\nimport { AccordionOptions, ACCORDION_OPTIONS } from './accordion.options';\r\n\r\n@Component({\r\n  selector: 'desx-accordion',\r\n  templateUrl: './accordion.component.html',\r\n  styleUrls: ['./accordion.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AccordionComponent implements OnInit {\r\n  @Input()\r\n  id: string = '';\r\n\r\n  @Input()\r\n  options?: Partial<AccordionOptions>;\r\n\r\n  @Output()\r\n  // eslint-disable-next-line @angular-eslint/no-output-native\r\n  show = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  shown = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  hide = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  hidden = new EventEmitter<Event>();\r\n\r\n  @ContentChildren(AccordionItemDirective) items!: QueryList<AccordionItemDirective>;\r\n\r\n  constructor(\r\n    @Inject(ACCORDION_OPTIONS) private defaultOptions: AccordionOptions,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private zone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.renderer.listen(this.elRef.nativeElement, EventType.Show, (e) => this.show.emit(e));\r\n      this.renderer.listen(this.elRef.nativeElement, EventType.Shown, (e) => this.shown.emit(e));\r\n      this.renderer.listen(this.elRef.nativeElement, EventType.Hide, (e) => this.hide.emit(e));\r\n      this.renderer.listen(this.elRef.nativeElement, EventType.Hidden, (e) => this.hidden.emit(e));\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-accordion {\r\n  .accordion-button:not(.collapsed) {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    border-color: transparent;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    font-weight: 700;\r\n  }\r\n}\r\n",
                    "styleUrl": "./accordion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "AccordionOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "AccordionOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [id]=\"id\" [ngClass]=\"['accordion', options?.flush ? 'accordion-flush' : '']\">\r\n  <ng-template ngFor [ngForOf]=\"items\" let-item>\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" [id]=\"'heading_' + item.id\">\r\n        <button\r\n          [ngClass]=\"['accordion-button', !item.show ? 'collapsed' : '']\"\r\n          [attr.data-bs-target]=\"'#' + item.id\"\r\n          [attr.aria-expanded]=\"item.show ? 'true' : 'false'\"\r\n          [attr.aria-controls]=\"item.id\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n        >\r\n          <ng-container [ngTemplateOutlet]=\"item.headerTmpl.tmplRef\"></ng-container>\r\n        </button>\r\n      </h2>\r\n      <div\r\n        [id]=\"item.id\"\r\n        [ngClass]=\"['accordion-collapse collapse', item.show ? 'show' : '']\"\r\n        [attr.aria-labelledby]=\"'heading_' + item.id\"\r\n        [attr.data-bs-parent]=\"!options?.alwaysOpen ? '#' + id : ''\"\r\n      >\r\n        <div class=\"accordion-body\">\r\n          <ng-container [ngTemplateOutlet]=\"item.contentTmpl.tmplRef\"></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "AlertComponent",
            "id": "component-AlertComponent-4b132f8c62d779d905571f8b5a7d1619867d9b6153a1fff5b1e951c7b0022eaf177f47381dfb62c65d9f4fcf1d03e63166b8db37597281dbb1a672d72867ef0c",
            "file": "src/app/shared/components/alert/alert.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-alert",
            "styleUrls": [
                "./alert.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./alert.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dismissible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Partial<AlertOptions>",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'alert-primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "AlertTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closed",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { AlertTypes, EventType } from './alert.models';\r\nimport { AlertOptions, ALERT_OPTIONS } from './alert.options';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\n@Component({\r\n  selector: 'desx-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AlertComponent implements OnInit {\r\n  @Input()\r\n  options?: Partial<AlertOptions>;\r\n\r\n  @Input()\r\n  type: AlertTypes = 'alert-primary';\r\n\r\n  @Input()\r\n  dismissible: boolean = false;\r\n\r\n  @Output()\r\n  closed = new EventEmitter<Event>();\r\n\r\n  constructor(\r\n    @Inject(ALERT_OPTIONS) private defaultOptions: AlertOptions,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private zone: NgZone,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.renderer.listen(this.elRef.nativeElement, EventType.Close, (e) => this.closed.emit(e));\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.zone.runOutsideAngular(() => {\r\n      const alert = bootstrap.Alert.getInstance(this.elRef.nativeElement);\r\n      alert?.close();\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-alert {\r\n  p:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n",
                    "styleUrl": "./alert.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "AlertOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "AlertOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"['alert', type, dismissible ? 'alert-dismissible fade show' : '']\" role=\"alert\">\r\n  <ng-content></ng-content>\r\n  <button\r\n    *ngIf=\"dismissible\"\r\n    type=\"button\"\r\n    class=\"btn-close\"\r\n    data-bs-dismiss=\"alert\"\r\n    aria-label=\"Close\"\r\n  ></button>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ce13122b339ad6e8ed51d59a90d4ee2843c928bb6c0bb6c555f055e883befff010de92e3ef40ec3476c480b2caa7309fc3054b262f118beaa8f7b2ca981cfd1f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-app-root",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-app-root',\r\n  template: '',\r\n})\r\nexport class AppComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-1ac3a86897be74cbedab8dbd15b7ebdb60f210b6f80f19e0cd053debf1ea3fea128e09c6a272bde1a490fb7078a4c814a823578f2fd74466ce8c7793fa60380d",
            "file": "src/app/shared/components/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-badge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss'],\r\n})\r\nexport class BadgeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>badge works!</p>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e26710e3d3703e49fef208f80d70aa1af77ec92400e537ffc05d562e999dd4bb1ffb25e64f5791b1a6fd7f16e51f037ce4d8becd73dbf3e1881ff4b21cca354e",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnStyle",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "ButtonStyles",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Partial<ButtonOptions>",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "ButtonSizes",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "ButtonTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { ButtonSizes, ButtonStyles, ButtonTypes } from './button.models';\r\nimport { ButtonOptions, BUTTON_OPTIONS } from './button.options';\r\n\r\n@Component({\r\n  selector: 'desx-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  @Input()\r\n  options?: Partial<ButtonOptions>;\r\n\r\n  @Input()\r\n  size: ButtonSizes = '';\r\n\r\n  @Input()\r\n  btnStyle: ButtonStyles = 'primary';\r\n\r\n  @Input()\r\n  type: ButtonTypes = 'button';\r\n\r\n  @Output()\r\n  // eslint-disable-next-line @angular-eslint/no-output-native\r\n  click = new EventEmitter<Event>();\r\n\r\n  constructor(\r\n    @Inject(BUTTON_OPTIONS) private defaultOptions: ButtonOptions,\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n\r\n    this.renderer.listen(this.elRef.nativeElement, 'click', (e) => this.click.emit(e));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button [type]=\"type\" [ngClass]=\"['btn', btnStyle | buttonStyle: options, size]\">\r\n  <ng-content></ng-content>\r\n</button>\r\n"
        },
        {
            "name": "ButtonGroupComponent",
            "id": "component-ButtonGroupComponent-a4a0957f6dc57c9b4e297b2ea3b16721f63c8b3eefdb3a93fda5707adb122bf9c757a0f538428d96108d2c65676bbb725de316b678690dc986877e998747da8f",
            "file": "src/app/shared/components/button-group/button-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-button-group",
            "styleUrls": [
                "./button-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-button-group',\r\n  templateUrl: './button-group.component.html',\r\n  styleUrls: ['./button-group.component.scss'],\r\n})\r\nexport class ButtonGroupComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>button-group works!</p>\r\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-f4ff1f3113c8a0d4b7e6a45d7007e6275e04d0b56ad65dfaf3c89a3a35afbaeb91d89c8fc1ef31e7184f41e36a149c3a5798b176c47c5edf1b8d46042e7a744d",
            "file": "src/app/shared/components/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>card works!</p>\r\n"
        },
        {
            "name": "CarouselComponent",
            "id": "component-CarouselComponent-5cf8923e8a039feed77fb5d9f1ecb862f9fa66c4e6642689266366a711f46c7d8fe37e4218d7e2341f67e5d09c0cc2a07c52f83067621883b604ff1e4dcdf425",
            "file": "src/app/shared/components/carousel/carousel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-carousel",
            "styleUrls": [
                "./carousel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./carousel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-carousel',\r\n  templateUrl: './carousel.component.html',\r\n  styleUrls: ['./carousel.component.scss'],\r\n})\r\nexport class CarouselComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./carousel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>carousel works!</p>\r\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-f39478a8f02bea3450b948221e7ef7f362fc6918bf7743a53df26d88f2ef92dfb04bfc0d1d0839d944debeb6ec6539fe4448909088abb7753875fc0e51ce7621",
            "file": "src/app/shared/components/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss'],\r\n})\r\nexport class DropdownComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dropdown works!</p>\r\n"
        },
        {
            "name": "ImageComponent",
            "id": "component-ImageComponent-924f3100f2c3909d087cd8509076ba95f4d11f918a05c3540245a2600a7d2386ad1fd81ffdaea31fd009c4de9e07ba401f8509c2067bc763f2c1d48a9aea8014",
            "file": "src/app/shared/components/image/image.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-image",
            "styleUrls": [
                "./image.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./image.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "altText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Partial<ImageOptions>",
                    "decorators": []
                },
                {
                    "name": "source",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ImageType",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ImageType } from './image.models';\r\nimport { ImageOptions, IMAGE_OPTIONS } from './image.options';\r\n\r\n@Component({\r\n  selector: 'desx-image',\r\n  templateUrl: './image.component.html',\r\n  styleUrls: ['./image.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ImageComponent implements OnInit {\r\n  @Input()\r\n  id: string = '';\r\n\r\n  @Input()\r\n  options?: Partial<ImageOptions>;\r\n\r\n  @Input()\r\n  source: string = '';\r\n\r\n  @Input()\r\n  altText: string = '';\r\n\r\n  @Input()\r\n  width: string = '0';\r\n\r\n  @Input()\r\n  height: string = '0';\r\n\r\n  @Input()\r\n  type: ImageType = 'rounded';\r\n\r\n  constructor(@Inject(IMAGE_OPTIONS) private defaultOptions: ImageOptions) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./image.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ImageOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ImageOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<img\r\n  [id]=\"id\"\r\n  [src]=\"source\"\r\n  [alt]=\"altText\"\r\n  [width]=\"width\"\r\n  [height]=\"height\"\r\n  [ngClass]=\"['img-fluid', type]\"\r\n/>\r\n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-7e1d25f6d6687ed8bbf5f183820bc31ea090b4875ef765068cc0978835572e82096af92cdf4e1a07b45277a38478d3a75bfe4e2bcb2c30a2d1579e2cf7d4afae",
            "file": "src/app/shared/components/label/label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-label",
            "styleUrls": [
                "./label.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./label.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-label',\r\n  templateUrl: './label.component.html',\r\n  styleUrls: ['./label.component.scss'],\r\n})\r\nexport class LabelComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./label.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>label works!</p>\r\n"
        },
        {
            "name": "ListGroupComponent",
            "id": "component-ListGroupComponent-9a7722c42ff633bb9ccf2ad802eb2ff4f638f321c712e207f0bcc85762c2f8cf1135decf74c842c8872f923bb178282d80ef74928acde6d000e2974aa24a8d69",
            "file": "src/app/shared/components/list-group/list-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-list-group",
            "styleUrls": [
                "./list-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-list-group',\r\n  templateUrl: './list-group.component.html',\r\n  styleUrls: ['./list-group.component.scss'],\r\n})\r\nexport class ListGroupComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>list-group works!</p>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-0d963edf290874b15c5275ae85678ce3e7abbe9cb92e14ec6cb1fcf23695aba5f3c5acee649830557b11a1c9131eef662d22f72ad4ba078fbfdb9b22b2cbe7e8",
            "file": "src/app/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>login works!</p>\r\n"
        },
        {
            "name": "LoginStatusComponent",
            "id": "component-LoginStatusComponent-f1a3abf0f60b282f0042e2ac1736e82495eb9f5bedd978e90c64d76c18b5f247892dfc34d392acc216c0fed9f99d95a220c75d72542e0bdab55231602e8de117",
            "file": "src/app/components/login-status/login-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-login-status",
            "styleUrls": [
                "./login-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-login-status',\r\n  templateUrl: './login-status.component.html',\r\n  styleUrls: ['./login-status.component.scss'],\r\n})\r\nexport class LoginStatusComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>login-status works!</p>\r\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-1b287f85d54f89a4b39a60dcd56f337dd26320c3a66aaef99a89926d5287fa5f5f12e4e8ee859307cac4db803c27a6dc7d768c152d756eabb317f5847965cc8f",
            "file": "src/app/shared/components/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-modal",
            "styleUrls": [
                "./modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss'],\r\n})\r\nexport class ModalComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>modal works!</p>\r\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-c28e0efea801a5066b4b753958c44e21a5dc3d0d05721e5ebab105c07835d7ba0fc78e20676c83cc4e6889884267a4ba0be13f0b8c9f3719f6f358c80ab49040",
            "file": "src/app/shared/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-navbar",
            "styleUrls": [
                "./navbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navbar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>navbar works!</p>\r\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-839c48cbd922c81287af1c27837ba365880e9d82d3093ad999b8c1a4452b02aa7ec78af7578c1beba4c58ac86cc82929bbb442f6a6aeac1208e9f9c1d362ef12",
            "file": "src/app/shared/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-pagination",
            "styleUrls": [
                "./pagination.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss'],\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pagination.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>pagination works!</p>\r\n"
        },
        {
            "name": "PopoversComponent",
            "id": "component-PopoversComponent-cb186c62ca6e013f71efb4e909a196b931fa05ced8e5154f93acb754d591e4988abfd13d1f6ec9f865f0444e7c0f4414c45efd503754ad824e4954ad795b8da8",
            "file": "src/app/shared/components/popovers/popovers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-popovers",
            "styleUrls": [
                "./popovers.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./popovers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-popovers',\r\n  templateUrl: './popovers.component.html',\r\n  styleUrls: ['./popovers.component.scss'],\r\n})\r\nexport class PopoversComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./popovers.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>popovers works!</p>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-62e33e9c0fbabdf96f8c7a60e6090da57d415cc6e53745767deba1dc42095169ddb9e99214235ab2977af4cd9c504924b7577e55d38a5e6b6c61deae0483688f",
            "file": "src/app/components/profile/profile.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<ProfileOptions>",
                    "decorators": []
                },
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Profile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Profile } from './profile.models';\r\nimport { ProfileOptions, PROFILE_OPTIONS } from './profile.options';\r\n\r\n@Component({\r\n  selector: 'desx-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @Input()\r\n  options?: Partial<ProfileOptions>;\r\n\r\n  @Input()\r\n  profile?: Profile;\r\n\r\n  constructor(@Optional() @Inject(PROFILE_OPTIONS) private defaultOptions: ProfileOptions) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$header-color: #3e3e3e !default;\r\n$subtitle-color: rgb(133, 132, 132) !default;\r\n\r\ndesx-profile {\r\n  text-align: center;\r\n\r\n  desx-image img {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .seperator {\r\n    margin: 0 1rem;\r\n    color: $subtitle-color;\r\n    font-weight: 100;\r\n  }\r\n\r\n  .profile-full-name {\r\n    color: $header-color;\r\n  }\r\n\r\n  .profile-user-name {\r\n    color: $subtitle-color;\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "ProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "ProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <desx-image\r\n        id=\"profileImage\"\r\n        [source]=\"profile?.profileImage || ''\"\r\n        width=\"100\"\r\n        height=\"100\"\r\n      ></desx-image>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <h4 class=\"profile-full-name\">{{ profile?.fullName }}</h4>\r\n      <span class=\"profile-user-name\">{{ profile?.userName }}</span>\r\n      <span *ngIf=\"options?.showLink\" class=\"seperator\">|</span>\r\n      <a *ngIf=\"options?.showLink\" class=\"profile-user-link\" href=\"#\">{{ profile?.link }}</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProfileTemplateComponent",
            "id": "component-ProfileTemplateComponent-86a70c7be2f7dde0453cf71dc0bcc8411dac787871cb43addf3d6523a5e5ccbfd0bfe43f58593e457b976b678ad79d2735d264759095060cd307a27d51ce9c60",
            "file": "src/app/templates/profile-template/profile-template.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-profile-template",
            "styleUrls": [
                "./profile-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ProfileOptions",
                    "decorators": []
                },
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Profile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { Profile } from '@components/profile/profile.models';\r\nimport { ProfileOptions } from '@components/profile/profile.options';\r\n\r\n@Component({\r\n  selector: 'desx-profile-template',\r\n  templateUrl: './profile-template.component.html',\r\n  styleUrls: ['./profile-template.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ProfileTemplateComponent {\r\n  @Input()\r\n  options?: ProfileOptions;\r\n\r\n  @Input()\r\n  profile?: Profile;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-profile-template {\r\n  .user-profile {\r\n    border: 1px solid #eee;\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 5px #ccc;\r\n    max-width: 400px;\r\n    text-align: center;\r\n  }\r\n\r\n  .profile-section,\r\n  .social-button,\r\n  .booking-section,\r\n  .statistic-section {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  .booking-section {\r\n    button {\r\n      margin-top: 1rem;\r\n      margin-bottom: 1rem;\r\n      border-radius: 30px;\r\n      font-weight: 600;\r\n      text-transform: uppercase;\r\n      padding: 0.6rem 1.4rem 0.6rem 1.4rem;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile-template.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"user-profile\">\r\n  <div class=\"profile-section\">\r\n    <desx-profile [profile]=\"profile\" [options]=\"options\"></desx-profile>\r\n  </div>\r\n  <div class=\"social-button\">\r\n    <ng-content select=\"[social]\"></ng-content>\r\n  </div>\r\n  <div class=\"booking-section\">\r\n    <ng-content select=\"[booking]\"></ng-content>\r\n  </div>\r\n  <div class=\"statistic-section\">\r\n    <ng-content selec=\"[statistic]\"></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProgressComponent",
            "id": "component-ProgressComponent-d62b783912636dfdbd80083094241dd189be5114a122e1a7773a803f62547c24b8e5c14d4cbf403300757e8d8fd7b11dc3801af22c3de5dc7a07dd660a1c8798",
            "file": "src/app/shared/components/progress/progress.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-progress",
            "styleUrls": [
                "./progress.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: ['./progress.component.scss'],\r\n})\r\nexport class ProgressComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./progress.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>progress works!</p>\r\n"
        },
        {
            "name": "SocialButtonsComponent",
            "id": "component-SocialButtonsComponent-474b8cac010d7e00d17c38e4d2622b45927c2a69c4ed4ee0e3de03a275a1977bb5fc94a769f043103bf024f7bbc14be9644ee1909809eab01cb4935df363eaba",
            "file": "src/app/components/social-buttons/social-buttons.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-social-buttons",
            "styleUrls": [
                "./social-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./social-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "SocialButton[]",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<SocialButtonOptions>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { SocialButton } from './social-buttons.models';\r\nimport { SocialButtonOptions, SOCIAL_BUTTON_OPTIONS } from './social-buttons.options';\r\n\r\n@Component({\r\n  selector: 'desx-social-buttons',\r\n  templateUrl: './social-buttons.component.html',\r\n  styleUrls: ['./social-buttons.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SocialButtonsComponent implements OnInit {\r\n  @Input()\r\n  options?: Partial<SocialButtonOptions>;\r\n\r\n  @Input()\r\n  buttons: SocialButton[] = [];\r\n\r\n  constructor(\r\n    @Optional() @Inject(SOCIAL_BUTTON_OPTIONS) private defaultOptions: SocialButtonOptions,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-social-buttons {\r\n  text-align: center;\r\n\r\n  desx-button {\r\n    button.btn {\r\n      border-radius: 50%;\r\n      padding: 5px 9px 5px 9px;\r\n      border-width: 0.125rem;\r\n      margin-right: 0.3rem;\r\n    }\r\n\r\n    button.btn-outline-primary {\r\n      &:hover {\r\n        background-color: transparent;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./social-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "SocialButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "SocialButtonOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"social-buttons\">\r\n  <desx-button\r\n    *ngFor=\"let button of buttons\"\r\n    type=\"button\"\r\n    btnStyle=\"primary\"\r\n    [options]=\"{ isOutline: true }\"\r\n  >\r\n    <a [href]=\"button.link\">\r\n      <i [ngClass]=\"['bi', button.type]\"></i>\r\n    </a>\r\n  </desx-button>\r\n</div>\r\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-a37ce2486270fed89df61dd63b95c026bd357b37fe33efa787bc8298bf1afd429b5a27fb5dc18cdc3e2d59c6a7ffd3b352afa3690da503859260c19b5e6d9000",
            "file": "src/app/shared/components/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-spinner",
            "styleUrls": [
                "./spinner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss'],\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./spinner.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>spinner works!</p>\r\n"
        },
        {
            "name": "StatisticsComponent",
            "id": "component-StatisticsComponent-a9442dbca533f60e621638783f4e3ee9a56d1d3343c192b8976e755869ba57c60befa92ddc273a4b315dabda4fbb6759307906469677821886e4abd60044d23b",
            "file": "src/app/components/statistics/statistics.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-statistics",
            "styleUrls": [
                "./statistics.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./statistics.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<StatisticsOptions>",
                    "decorators": []
                },
                {
                    "name": "statistics",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Statistic[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Statistic } from './statistics.models';\r\nimport { StatisticsOptions, STATISTICS_OPTIONS } from './statistics.options';\r\n\r\n@Component({\r\n  selector: 'desx-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  @Input()\r\n  options?: Partial<StatisticsOptions>;\r\n\r\n  @Input()\r\n  statistics: Statistic[] = [];\r\n\r\n  constructor(@Optional() @Inject(STATISTICS_OPTIONS) private defaultOptions: StatisticsOptions) {}\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "desx-statistics {\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./statistics.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "StatisticsOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "StatisticsOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row statistics\">\r\n  <div *ngFor=\"let statistic of statistics\" class=\"statistic-item col-md-4\">\r\n    <h5>{{ statistic.value }}</h5>\r\n    <p>{{ statistic.text }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-d9fb7cfde914650d865ad48c3f856633eed24dde9e18a35e5ab02ef5fc9d53339ab19ee24dc629317af7ad75a995c5faee3539a0f093bf96f615e48ffe262ba5",
            "file": "src/app/shared/components/textbox/textbox.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: TextboxComponent, multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "desx-textbox",
            "styleUrls": [
                "./textbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./textbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "invalidFeedback",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Partial<TextboxOptions>",
                    "decorators": []
                },
                {
                    "name": "parentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "TextboxSize",
                    "decorators": []
                },
                {
                    "name": "textboxType",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TextboxType",
                    "decorators": []
                },
                {
                    "name": "validFeedback",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { TextboxSize, TextboxType } from './textbox.models';\r\nimport { TextboxOptions, TEXTBOX_OPTIONS } from './textbox.options';\r\n\r\n@Component({\r\n  selector: 'desx-textbox',\r\n  templateUrl: './textbox.component.html',\r\n  styleUrls: ['./textbox.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: TextboxComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class TextboxComponent implements OnInit, ControlValueAccessor {\r\n  @Input()\r\n  id: string = '';\r\n\r\n  @Input()\r\n  options?: Partial<TextboxOptions>;\r\n\r\n  @Input()\r\n  textboxType: TextboxType = 'text';\r\n\r\n  @Input()\r\n  size: TextboxSize = '';\r\n\r\n  @Input()\r\n  placeholder: string = '';\r\n\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  validFeedback: string = '';\r\n\r\n  @Input()\r\n  invalidFeedback: string = '';\r\n\r\n  @Input()\r\n  parentForm?: FormGroup;\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  set value(val: string) {\r\n    if (val !== undefined && val !== this._value) {\r\n      this._value = val;\r\n\r\n      this.onChange(val);\r\n      this.onTouch();\r\n    }\r\n  }\r\n\r\n  private _value: string = '';\r\n  private onChange = (val: any) => {};\r\n  private onTouch = () => {};\r\n\r\n  constructor(@Inject(TEXTBOX_OPTIONS) private defaultOptions: TextboxOptions) {}\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      ...this.defaultOptions,\r\n      ...this.options,\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".invalid-feedback,\r\n.valid-feedback {\r\n  display: block !important;\r\n}\r\n",
                    "styleUrl": "./textbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "TextboxOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "TextboxOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "val",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                }
            },
            "templateData": "<ng-container\r\n  *ngTemplateOutlet=\"options?.floatingLabels ? floatingTextboxTemplate : labeledTextboxTemplate\"\r\n></ng-container>\r\n\r\n<ng-template #defaultTextboxTemplate>\r\n  <input\r\n    [id]=\"id\"\r\n    [name]=\"id\"\r\n    [type]=\"textboxType\"\r\n    [placeholder]=\"placeholder\"\r\n    [ngClass]=\"['form-control', size]\"\r\n    [(ngModel)]=\"value\"\r\n  />\r\n</ng-template>\r\n\r\n<ng-template #validationTemplate>\r\n  <div *ngIf=\"parentForm?.valid && parentForm?.touched\" class=\"valid-feedback\">\r\n    {{ validFeedback }}\r\n  </div>\r\n  <div *ngIf=\"parentForm?.invalid\" class=\"invalid-feedback\">{{ invalidFeedback }}</div>\r\n</ng-template>\r\n\r\n<ng-template #labeledTextboxTemplate>\r\n  <label class=\"form-label\" [for]=\"id\">{{ label }}</label>\r\n  <ng-container *ngTemplateOutlet=\"defaultTextboxTemplate\"></ng-container>\r\n  <ng-container *ngTemplateOutlet=\"validationTemplate\"></ng-container>\r\n</ng-template>\r\n\r\n<ng-template #floatingTextboxTemplate>\r\n  <div class=\"form-floating\">\r\n    <ng-container *ngTemplateOutlet=\"defaultTextboxTemplate\"></ng-container>\r\n    <label class=\"form-label\" [for]=\"id\">{{ label }}</label>\r\n  </div>\r\n  <ng-container *ngTemplateOutlet=\"validationTemplate\"></ng-container>\r\n</ng-template>\r\n"
        },
        {
            "name": "TextboxWrapperComponent",
            "id": "component-TextboxWrapperComponent-732569a0d2cbd5f8190e0fbe3d5e203813c97456b74a4b50304191fb8c12635999f0f84222b62131228c2d07f52f4780c83876ae409f1b7e198dbab1f9b5851e",
            "file": "src/app/shared/components/textbox/textbox.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-textbox-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<form #registerForm [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <desx-textbox\n    id=\"passengerName\"\n    label=\"Passenger Name\"\n    textboxType=\"text\"\n    formControlName=\"passengerName\"\n    validFeedback=\"Looks good!\"\n    invalidFeedback=\"Please provide a valid passenger name\"\n    [parentForm]=\"form\"\n  ></desx-textbox>\n  <br />\n  <desx-button id=\"saveButton\" [type]=\"buttonType\">Save</desx-button>\n</form>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonType",
                    "defaultValue": "'submit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonTypes",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "onSubmit",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "textbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextboxComponent",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "TextboxComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { moduleMetadata, Meta, Story, componentWrapperDecorator } from '@storybook/angular';\r\nimport { ButtonComponent } from '../button/button.component';\r\nimport { ButtonTypes } from '../button/button.models';\r\nimport { ButtonStylePipe } from '../button/pipes/button-style.pipe';\r\nimport { DEFAULT_COMPONENT_OPTIONS } from '../components.config';\r\nimport { TextboxComponent } from './textbox.component';\r\n\r\n@Component({\r\n  selector: 'desx-textbox-wrapper',\r\n  template: `\r\n    <form #registerForm [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <desx-textbox\r\n        id=\"passengerName\"\r\n        label=\"Passenger Name\"\r\n        textboxType=\"text\"\r\n        formControlName=\"passengerName\"\r\n        validFeedback=\"Looks good!\"\r\n        invalidFeedback=\"Please provide a valid passenger name\"\r\n        [parentForm]=\"form\"\r\n      ></desx-textbox>\r\n      <br />\r\n      <desx-button id=\"saveButton\" [type]=\"buttonType\">Save</desx-button>\r\n    </form>\r\n  `,\r\n})\r\nclass TextboxWrapperComponent implements OnInit {\r\n  form!: FormGroup;\r\n  buttonType: ButtonTypes = 'submit';\r\n\r\n  @ViewChild(TextboxComponent) textbox!: TextboxComponent;\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      passengerName: new FormControl('Enter passenger name', Validators.required),\r\n    });\r\n  }\r\n\r\n  onSubmit = () => {};\r\n}\r\n\r\nexport default {\r\n  title: 'Design System/Molecules/Textbox',\r\n  component: TextboxComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [FormsModule, ReactiveFormsModule],\r\n      declarations: [TextboxComponent, TextboxWrapperComponent, ButtonComponent, ButtonStylePipe],\r\n      providers: [...DEFAULT_COMPONENT_OPTIONS],\r\n    }),\r\n    componentWrapperDecorator((story) => `<div style=\"margin: 5rem\">${story}</div>`),\r\n  ],\r\n  argTypes: {\r\n    ngOnInit: { table: { disable: true } },\r\n    writeValue: { table: { disable: true } },\r\n    registerOnChange: { table: { disable: true } },\r\n    registerOnTouched: { table: { disable: true } },\r\n    onTouch: { table: { disable: true } },\r\n    onChange: { table: { disable: true } },\r\n    _value: { table: { disable: true } },\r\n  },\r\n} as Meta;\r\n\r\n/**\r\n * Default template for stories\r\n *\r\n * @param args template arguments\r\n * @returns Story\r\n */\r\nconst Template: Story = (args) => ({\r\n  props: args,\r\n});\r\n\r\n/**\r\n * This template uses TextboxWrapperComponent to wrap\r\n * textbox with form element\r\n *\r\n * @param args template arguments\r\n * @returns Story\r\n */\r\nconst FormTemplate: Story = (args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n});\r\n\r\n/**\r\n * Default story\r\n */\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  id: 'passengerName',\r\n  label: 'Passenger Name',\r\n  placeholder: 'Enter your passenger name',\r\n};\r\n\r\n/**\r\n * Floating labels\r\n */\r\nexport const Floating = Template.bind({});\r\nFloating.args = {\r\n  ...Default.args,\r\n  options: {\r\n    floatingLabels: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Floating labels w/ value\r\n */\r\nexport const FloatingWithValue = Template.bind({});\r\nFloatingWithValue.args = {\r\n  ...Default.args,\r\n  value: 'Hubert Blaine Wolfeschlegelsteinhausenbergerdorff Sr.',\r\n  options: {\r\n    floatingLabels: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Textbox w/ form wrapper\r\n */\r\nexport const TextboxInForm = FormTemplate.bind({});\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ToastComponent",
            "id": "component-ToastComponent-433a05b2229f39ae9ce99e9704bdf885a517b00cf61e7a479b6e6ec4ab15ff893a6e7534a2d284cdaaf74a0cb9065a76df3b4d3a0c44f5c0e2ac52d97fcdefa7",
            "file": "src/app/shared/components/toast/toast.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-toast",
            "styleUrls": [
                "./toast.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toast.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-toast',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss'],\r\n})\r\nexport class ToastComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./toast.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>toast works!</p>\r\n"
        },
        {
            "name": "TooltipsComponent",
            "id": "component-TooltipsComponent-9641d270871eca84279dccb6b3376fda1107e1a79c22eca9357182fb758399df65732c64a570919e929b36b30c1812709030d5f2168cd521ec99dc14685295de",
            "file": "src/app/shared/components/tooltips/tooltips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-tooltips",
            "styleUrls": [
                "./tooltips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'desx-tooltips',\r\n  templateUrl: './tooltips.component.html',\r\n  styleUrls: ['./tooltips.component.scss'],\r\n})\r\nexport class TooltipsComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tooltips.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>tooltips works!</p>\r\n"
        },
        {
            "name": "UserProfilePresComponent",
            "id": "component-UserProfilePresComponent-c65f062f519c1ace3f01a2acec0226d6162b7d99356b5f134070c497a0959051ccd99d0297611d253f004778b2e882842028c6ff6088116da970858fe424e089",
            "file": "src/app/modules/user-profile/presenter/user-profile-pres.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "desx-user-profile-pres",
            "styleUrls": [
                "./user-profile-pres.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-profile-pres.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Partial<UserProfileOptions>",
                    "decorators": []
                },
                {
                    "name": "profile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "UserProfile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional, ViewEncapsulation } from '@angular/core';\nimport { UserProfile } from './user-profile-pres.models';\nimport { UserProfileOptions, USER_PROFILE_OPTIONS } from './user-profile-pres.options';\n\n@Component({\n  selector: 'desx-user-profile-pres',\n  templateUrl: './user-profile-pres.component.html',\n  styleUrls: ['./user-profile-pres.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class UserProfilePresComponent implements OnInit {\n  @Input()\n  options?: Partial<UserProfileOptions>;\n\n  @Input()\n  profile!: UserProfile;\n\n  constructor(\n    @Optional() @Inject(USER_PROFILE_OPTIONS) private defaultOptions: UserProfileOptions,\n  ) {}\n\n  ngOnInit(): void {\n    this.options = {\n      ...this.defaultOptions,\n      ...this.options,\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-profile-pres.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "defaultOptions",
                        "type": "UserProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "defaultOptions",
                        "type": "UserProfileOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<desx-profile-template [profile]=\"profile.profile\" [options]=\"options?.profileOptions\">\n  <desx-social-buttons\n    social\n    [buttons]=\"profile.socialLinks\"\n    [options]=\"options?.profileOptions\"\n  ></desx-social-buttons>\n  <desx-button booking [options]=\"options?.buttonOptions\"\n    ><i class=\"bi bi-clock\"></i> Book Now</desx-button\n  >\n  <desx-statistics statistic [statistics]=\"profile.statistics\"></desx-statistics>\n</desx-profile-template>\n"
        }
    ],
    "modules": [
        {
            "name": "AppComponentsModule",
            "id": "module-AppComponentsModule-20a40ba8d8fc48f5d4d253056b38e87f44463d8c622981d1d6407dc832f6660ad0f5e53bbc2c8a469925b5b40432d507e232f8697349af7309f457533f9451dc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/app-components.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { LoginStatusComponent } from './login-status/login-status.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SocialButtonsComponent } from './social-buttons/social-buttons.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    LoginStatusComponent,\n    ProfileComponent,\n    SocialButtonsComponent,\n    StatisticsComponent,\n  ],\n  imports: [CommonModule, SharedModule],\n  exports: [\n    LoginComponent,\n    LoginStatusComponent,\n    ProfileComponent,\n    SocialButtonsComponent,\n    StatisticsComponent,\n  ],\n})\nexport class AppComponentsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LoginStatusComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SocialButtonsComponent"
                        },
                        {
                            "name": "StatisticsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "LoginStatusComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "SocialButtonsComponent"
                        },
                        {
                            "name": "StatisticsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-074d2e4e67626d739956a53081a99c9a799ca1364224a0bfa4ba60f9cb6bf36fc5c50d03111d05114a0545aa4496ab78444cc02ff159b5f112f0d9c6f3925d40",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, CommonModule],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-bbcf8bf7611f1ca7344b0976918b5ec8d4711e990494dca5ae574e15346dc3ca498ce623a45e80edae1e30ac4a20dfc679fe401d36bafa4dcf1182eced4ef8b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AccordionComponent } from './components/accordion/accordion.component';\r\nimport { DEFAULT_COMPONENT_OPTIONS } from './components/components.config';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccordionHeaderDirective } from './components/accordion/directives/accordion-header.directive';\r\nimport { AccordionContentDirective } from './components/accordion/directives/accordion-content.directive';\r\nimport { AccordionItemDirective } from './components/accordion/directives/accordion-item.directive';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TextboxComponent } from './components/textbox/textbox.component';\r\nimport { ImageComponent } from './components/image/image.component';\r\nimport { ButtonStylePipe } from './components/button/pipes/button-style.pipe';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { TooltipsComponent } from './components/tooltips/tooltips.component';\r\nimport { LabelComponent } from './components/label/label.component';\r\nimport { PaginationComponent } from './components/pagination/pagination.component';\r\nimport { BadgeComponent } from './components/badge/badge.component';\r\nimport { CardComponent } from './components/card/card.component';\r\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\r\nimport { ListGroupComponent } from './components/list-group/list-group.component';\r\nimport { ProgressComponent } from './components/progress/progress.component';\r\nimport { SpinnerComponent } from './components/spinner/spinner.component';\r\nimport { PopoversComponent } from './components/popovers/popovers.component';\r\nimport { CarouselComponent } from './components/carousel/carousel.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionComponent,\r\n    ButtonComponent,\r\n    AccordionHeaderDirective,\r\n    AccordionContentDirective,\r\n    AccordionItemDirective,\r\n    AlertComponent,\r\n    TextboxComponent,\r\n    ImageComponent,\r\n    ButtonStylePipe,\r\n    NavbarComponent,\r\n    DropdownComponent,\r\n    ToastComponent,\r\n    ModalComponent,\r\n    TooltipsComponent,\r\n    LabelComponent,\r\n    PaginationComponent,\r\n    BadgeComponent,\r\n    CardComponent,\r\n    ButtonGroupComponent,\r\n    ListGroupComponent,\r\n    ProgressComponent,\r\n    SpinnerComponent,\r\n    PopoversComponent,\r\n    CarouselComponent,\r\n  ],\r\n  providers: [...DEFAULT_COMPONENT_OPTIONS],\r\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\r\n  exports: [\r\n    AccordionComponent,\r\n    AccordionItemDirective,\r\n    AccordionHeaderDirective,\r\n    AccordionContentDirective,\r\n    TextboxComponent,\r\n    ButtonComponent,\r\n    ImageComponent,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionContentDirective"
                        },
                        {
                            "name": "AccordionHeaderDirective"
                        },
                        {
                            "name": "AccordionItemDirective"
                        },
                        {
                            "name": "AlertComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonGroupComponent"
                        },
                        {
                            "name": "ButtonStylePipe"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CarouselComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "LabelComponent"
                        },
                        {
                            "name": "ListGroupComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "PopoversComponent"
                        },
                        {
                            "name": "ProgressComponent"
                        },
                        {
                            "name": "SpinnerComponent"
                        },
                        {
                            "name": "TextboxComponent"
                        },
                        {
                            "name": "ToastComponent"
                        },
                        {
                            "name": "TooltipsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AccordionComponent"
                        },
                        {
                            "name": "AccordionContentDirective"
                        },
                        {
                            "name": "AccordionHeaderDirective"
                        },
                        {
                            "name": "AccordionItemDirective"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ImageComponent"
                        },
                        {
                            "name": "TextboxComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TemplatesModule",
            "id": "module-TemplatesModule-645da6f78d53681200aa371896f1247637b0fcd0749c56085108f0e89339e624add696a40981e2da7167d1d76f40cd9fa1cbae5e151c7db67ca0d4da5411b25a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/templates/templates.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileTemplateComponent } from './profile-template/profile-template.component';\n\n@NgModule({\n  declarations: [ProfileTemplateComponent],\n  imports: [CommonModule],\n  exports: [ProfileTemplateComponent],\n})\nexport class TemplatesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProfileTemplateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProfileTemplateComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserProfileModule",
            "id": "module-UserProfileModule-6463b6e40740297d266d1211250c5275386a5bf67b1026c0fec1fbd182138bd3717033bed5416936f2d3e5eb39ba4c8fe6545680640db19f8134e65da76904d0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/user-profile/user-profile.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserProfilePresComponent } from './presenter/user-profile-pres.component';\nimport { TemplatesModule } from '@templates/templates.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { AppComponentsModule } from '@components/app-components.module';\n\n@NgModule({\n  declarations: [UserProfilePresComponent],\n  imports: [CommonModule, TemplatesModule, SharedModule, AppComponentsModule],\n  exports: [UserProfilePresComponent],\n})\nexport class UserProfileModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserProfilePresComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TemplatesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UserProfilePresComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ACCORDION_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AccordionOptions>(\r\n  'Default Accordion component options',\r\n)"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onShow: action(EventType.Show),\r\n  onShown: action(EventType.Shown),\r\n  onHide: action(EventType.Hide),\r\n  onHidden: action(EventType.Hidden),\r\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onClosed: action(EventType.Close),\r\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onClick: action('onClick'),\r\n}",
                "rawdescription": "Component events",
                "description": "<p>Component events</p>\n"
            },
            {
                "name": "AdditionalContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "AdditionalContentTemplate.bind({})"
            },
            {
                "name": "AdditionalContentTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    closed: actions.onClosed,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\" (closed)=\"onClosed($event)\">\r\n      <h4 class=\"alert-heading\">Well done!</h4>\r\n      <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n      <hr>\r\n      <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n    </desx-alert>\r\n  `,\r\n})",
                "rawdescription": "Additional template",
                "description": "<p>Additional template</p>\n"
            },
            {
                "name": "ALERT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AlertOptions>('Default Alert component options')"
            },
            {
                "name": "AlwaysOpen",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Multi collapsible accordion",
                "description": "<p>Multi collapsible accordion</p>\n"
            },
            {
                "name": "BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ButtonOptions>('Default Button component options')"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/social-buttons/social-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/statistics/statistics.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default Accordion",
                "description": "<p>Default Accordion</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default story",
                "description": "<p>Default story</p>\n"
            },
            {
                "name": "DEFAULT_ACCORDION_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AccordionOptions",
                "defaultValue": "{\r\n  flush: false,\r\n}",
                "rawdescription": "Default accordion component options",
                "description": "<p>Default accordion component options</p>\n"
            },
            {
                "name": "DEFAULT_ALERT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AlertOptions",
                "defaultValue": "{}",
                "rawdescription": "Default alert component options",
                "description": "<p>Default alert component options</p>\n"
            },
            {
                "name": "DEFAULT_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonOptions",
                "defaultValue": "{\r\n  isOutline: true,\r\n}",
                "rawdescription": "Default button component options",
                "description": "<p>Default button component options</p>\n"
            },
            {
                "name": "DEFAULT_COMPONENT_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/components.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { provide: ACCORDION_OPTIONS, useValue: DEFAULT_ACCORDION_OPTIONS },\r\n  { provide: BUTTON_OPTIONS, useValue: DEFAULT_BUTTON_OPTIONS },\r\n  { provide: ALERT_OPTIONS, useValue: DEFAULT_ALERT_OPTIONS },\r\n  { provide: TEXTBOX_OPTIONS, useValue: DEFAULT_TEXTBOX_OPTIONS },\r\n  { provide: IMAGE_OPTIONS, useValue: DEFAULT_IMAGE_OPTIONS },\r\n]"
            },
            {
                "name": "DEFAULT_IMAGE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ImageOptions",
                "defaultValue": "{}",
                "rawdescription": "Default image component options",
                "description": "<p>Default image component options</p>\n"
            },
            {
                "name": "DEFAULT_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile/profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProfileOptions",
                "defaultValue": "{\r\n  showLink: true,\r\n}",
                "rawdescription": "Default profile component options",
                "description": "<p>Default profile component options</p>\n"
            },
            {
                "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/social-buttons/social-buttons.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SocialButtonOptions",
                "defaultValue": "{}",
                "rawdescription": "Default social buttons component options",
                "description": "<p>Default social buttons component options</p>\n"
            },
            {
                "name": "DEFAULT_STATISTICS_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/statistics/statistics.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StatisticsOptions",
                "defaultValue": "{}",
                "rawdescription": "Default statistics component options",
                "description": "<p>Default statistics component options</p>\n"
            },
            {
                "name": "DEFAULT_TEXTBOX_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TextboxOptions",
                "defaultValue": "{\r\n  floatingLabels: false,\r\n}",
                "rawdescription": "Default button component options",
                "description": "<p>Default button component options</p>\n"
            },
            {
                "name": "DEFAULT_USER_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserProfileOptions",
                "defaultValue": "{}",
                "rawdescription": "Default user profile component options",
                "description": "<p>Default user profile component options</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n}"
            },
            {
                "name": "Floating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Floating labels",
                "description": "<p>Floating labels</p>\n"
            },
            {
                "name": "FloatingWithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Floating labels w/ value",
                "description": "<p>Floating labels w/ value</p>\n"
            },
            {
                "name": "Flushed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Flush Accordion",
                "description": "<p>Flush Accordion</p>\n"
            },
            {
                "name": "FormTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n})",
                "rawdescription": "This template uses TextboxWrapperComponent to wrap\r\ntextbox with form element",
                "description": "<p>This template uses TextboxWrapperComponent to wrap\ntextbox with form element</p>\n"
            },
            {
                "name": "IMAGE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ImageOptions>('Default Image component options')"
            },
            {
                "name": "OutlineDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})",
                "rawdescription": "Default outlined story",
                "description": "<p>Default outlined story</p>\n"
            },
            {
                "name": "PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile/profile.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ProfileOptions>(\r\n  'Default profile component options',\r\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SOCIAL_BUTTON_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/social-buttons/social-buttons.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options',\r\n)"
            },
            {
                "name": "SOCIAL_BUTTONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/social-buttons/social-buttons.mocks.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { type: SocialButtonTypes.Facebook, link: 'https://facebook.com' },\r\n  { type: SocialButtonTypes.Skype, link: 'https://skype.com' },\r\n  { type: SocialButtonTypes.Linkedin, link: 'https://linkedin.com' },\r\n]"
            },
            {
                "name": "STATISTICS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/statistics/statistics.mocks.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Statistic[]",
                "defaultValue": "[\r\n  { value: 8471, text: 'Wallets Balance' },\r\n  { value: 8512, text: 'Income amounts' },\r\n  { value: 4751, text: 'Total Transactions' },\r\n]"
            },
            {
                "name": "STATISTICS_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/statistics/statistics.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options',\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/profile/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/social-buttons/social-buttons.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/statistics/statistics.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    onShow: actions.onShow,\r\n    onShown: actions.onShown,\r\n    onHide: actions.onHide,\r\n    onHidden: actions.onHidden,\r\n  },\r\n  template: `\r\n    <desx-accordion id=\"mainAccordion\" [options]=\"options\"\r\n      (show)=\"onShow($event)\" (shown)=\"onShown($event)\" (hide)=\"onHide($event)\" (hidden)=\"onHidden($event)\">\r\n      <desx-accordion-item id=\"item1\">\r\n        <ng-template desxAccordionHeader>\r\n          Accordion Item #1\r\n        </ng-template>\r\n        <ng-template desxAccordionContent>\r\n          This is a test content\r\n        </ng-template>\r\n      </desx-accordion-item>\r\n      <desx-accordion-item id=\"item2\">\r\n        <ng-template desxAccordionHeader>\r\n          Accordion Item #2\r\n        </ng-template>\r\n        <ng-template desxAccordionContent>\r\n          This is a test content\r\n        </ng-template>\r\n      </desx-accordion-item>\r\n    </desx-accordion>\r\n  `,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/alert/alert.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\">\r\n      A simple primary alert—check it out!\r\n    </desx-alert>\r\n  `,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    click: actions.onClick,\r\n  },\r\n  template: `\r\n    <desx-button\r\n      [id]=\"id\"\r\n      [type]=\"type\"\r\n      [btnStyle]=\"style\"\r\n      [options]=\"options\"\r\n      (click)=\"onClick($event)\"\r\n    >Confirm your bags</desx-button>\r\n  `,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/image/image.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                "rawdescription": "Default template for stories",
                "description": "<p>Default template for stories</p>\n"
            },
            {
                "name": "TEXTBOX_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options',\r\n)"
            },
            {
                "name": "TextboxInForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/textbox/textbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FormTemplate.bind({})",
                "rawdescription": "Textbox w/ form wrapper",
                "description": "<p>Textbox w/ form wrapper</p>\n"
            },
            {
                "name": "USER_PROFILE_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options',\r\n)"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AlertTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"alert-primary\" | \"alert-secondary\" | \"alert-success\" | \"alert-danger\" | \"alert-warning\" | \"alert-info\" | \"alert-light\" | \"alert-dark\"",
                "file": "src/app/shared/components/alert/alert.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Type containing class definitions for different alert types</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonSizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | \"btn-lg\" | \"btn-sm\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Button sizes type</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonStyles",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Type containing class definitions for different button types</p>\n",
                "kind": 186
            },
            {
                "name": "ButtonTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"button\" | \"reset\" | \"submit\"",
                "file": "src/app/shared/components/button/button.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Button types [submit, reset, button]</p>\n",
                "kind": 186
            },
            {
                "name": "ImageType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"rounded\" | \"rounded-circle\"",
                "file": "src/app/shared/components/image/image.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TextboxSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string | \"form-control-lg\" | \"form-control-sm\"",
                "file": "src/app/shared/components/textbox/textbox.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Add the relative form sizing classes to the .input-group itself and contents within will\nautomatically resize—no need for repeating the form control size classes on each element.</p>\n",
                "kind": 186
            },
            {
                "name": "TextboxType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"email\" | \"file\" | \"text\" | \"password\"",
                "file": "src/app/shared/components/textbox/textbox.models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>HTML textbox types. Type contains only certain types and is extensible</p>\n",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "EventType",
                "childs": [
                    {
                        "name": "Show",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "show.bs.collapse"
                    },
                    {
                        "name": "Shown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "shown.bs.collapse"
                    },
                    {
                        "name": "Hide",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hide.bs.collapse"
                    },
                    {
                        "name": "Hidden",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "hide.bs.collapse"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Bootstrap collapse events</p>\n",
                "file": "src/app/shared/components/accordion/accordion.models.ts"
            },
            {
                "name": "EventType",
                "childs": [
                    {
                        "name": "Close",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "close.bs.alert"
                    },
                    {
                        "name": "Closed",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "closed.bs.alert"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Alert events</p>\n",
                "file": "src/app/shared/components/alert/alert.models.ts"
            },
            {
                "name": "SocialButtonTypes",
                "childs": [
                    {
                        "name": "Facebook",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-facebook"
                    },
                    {
                        "name": "Twitter",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-twitter"
                    },
                    {
                        "name": "Linkedin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-linkedin"
                    },
                    {
                        "name": "Skype",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-skype"
                    },
                    {
                        "name": "Instagram",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "bi-instagram"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Includes predefined bootstrap icon classes for social buttons</p>\n",
                "file": "src/app/components/social-buttons/social-buttons.models.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/accordion/accordion.options.ts": [
                {
                    "name": "ACCORDION_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AccordionOptions>(\r\n  'Default Accordion component options',\r\n)"
                },
                {
                    "name": "DEFAULT_ACCORDION_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AccordionOptions",
                    "defaultValue": "{\r\n  flush: false,\r\n}",
                    "rawdescription": "Default accordion component options",
                    "description": "<p>Default accordion component options</p>\n"
                }
            ],
            "src/app/shared/components/accordion/accordion.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onShow: action(EventType.Show),\r\n  onShown: action(EventType.Shown),\r\n  onHide: action(EventType.Hide),\r\n  onHidden: action(EventType.Hidden),\r\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "AlwaysOpen",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Multi collapsible accordion",
                    "description": "<p>Multi collapsible accordion</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default Accordion",
                    "description": "<p>Default Accordion</p>\n"
                },
                {
                    "name": "Flushed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Flush Accordion",
                    "description": "<p>Flush Accordion</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    onShow: actions.onShow,\r\n    onShown: actions.onShown,\r\n    onHide: actions.onHide,\r\n    onHidden: actions.onHidden,\r\n  },\r\n  template: `\r\n    <desx-accordion id=\"mainAccordion\" [options]=\"options\"\r\n      (show)=\"onShow($event)\" (shown)=\"onShown($event)\" (hide)=\"onHide($event)\" (hidden)=\"onHidden($event)\">\r\n      <desx-accordion-item id=\"item1\">\r\n        <ng-template desxAccordionHeader>\r\n          Accordion Item #1\r\n        </ng-template>\r\n        <ng-template desxAccordionContent>\r\n          This is a test content\r\n        </ng-template>\r\n      </desx-accordion-item>\r\n      <desx-accordion-item id=\"item2\">\r\n        <ng-template desxAccordionHeader>\r\n          Accordion Item #2\r\n        </ng-template>\r\n        <ng-template desxAccordionContent>\r\n          This is a test content\r\n        </ng-template>\r\n      </desx-accordion-item>\r\n    </desx-accordion>\r\n  `,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/alert/alert.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onClosed: action(EventType.Close),\r\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "AdditionalContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "AdditionalContentTemplate.bind({})"
                },
                {
                    "name": "AdditionalContentTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    closed: actions.onClosed,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\" (closed)=\"onClosed($event)\">\r\n      <h4 class=\"alert-heading\">Well done!</h4>\r\n      <p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>\r\n      <hr>\r\n      <p class=\"mb-0\">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>\r\n    </desx-alert>\r\n  `,\r\n})",
                    "rawdescription": "Additional template",
                    "description": "<p>Additional template</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n    <desx-alert [options]=\"options\" [type]=\"type\" [dismissible]=\"dismissible\">\r\n      A simple primary alert—check it out!\r\n    </desx-alert>\r\n  `,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onClick: action('onClick'),\r\n}",
                    "rawdescription": "Component events",
                    "description": "<p>Component events</p>\n"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "OutlineDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default outlined story",
                    "description": "<p>Default outlined story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n    click: actions.onClick,\r\n  },\r\n  template: `\r\n    <desx-button\r\n      [id]=\"id\"\r\n      [type]=\"type\"\r\n      [btnStyle]=\"style\"\r\n      [options]=\"options\"\r\n      (click)=\"onClick($event)\"\r\n    >Confirm your bags</desx-button>\r\n  `,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/alert/alert.options.ts": [
                {
                    "name": "ALERT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AlertOptions>('Default Alert component options')"
                },
                {
                    "name": "DEFAULT_ALERT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/alert/alert.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default alert component options",
                    "description": "<p>Default alert component options</p>\n"
                }
            ],
            "src/app/shared/components/button/button.options.ts": [
                {
                    "name": "BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ButtonOptions>('Default Button component options')"
                },
                {
                    "name": "DEFAULT_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonOptions",
                    "defaultValue": "{\r\n  isOutline: true,\r\n}",
                    "rawdescription": "Default button component options",
                    "description": "<p>Default button component options</p>\n"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/profile/profile.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/components/social-buttons/social-buttons.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/social-buttons/social-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/social-buttons/social-buttons.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/components/statistics/statistics.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/statistics/statistics.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/statistics/statistics.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/image/image.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                }
            ],
            "src/app/shared/components/textbox/textbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Default story",
                    "description": "<p>Default story</p>\n"
                },
                {
                    "name": "Floating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Floating labels",
                    "description": "<p>Floating labels</p>\n"
                },
                {
                    "name": "FloatingWithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "rawdescription": "Floating labels w/ value",
                    "description": "<p>Floating labels w/ value</p>\n"
                },
                {
                    "name": "FormTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<desx-textbox-wrapper></desx-textbox-wrapper>`,\r\n})",
                    "rawdescription": "This template uses TextboxWrapperComponent to wrap\r\ntextbox with form element",
                    "description": "<p>This template uses TextboxWrapperComponent to wrap\ntextbox with form element</p>\n"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})",
                    "rawdescription": "Default template for stories",
                    "description": "<p>Default template for stories</p>\n"
                },
                {
                    "name": "TextboxInForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FormTemplate.bind({})",
                    "rawdescription": "Textbox w/ form wrapper",
                    "description": "<p>Textbox w/ form wrapper</p>\n"
                }
            ],
            "src/app/shared/components/components.config.ts": [
                {
                    "name": "DEFAULT_COMPONENT_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/components.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { provide: ACCORDION_OPTIONS, useValue: DEFAULT_ACCORDION_OPTIONS },\r\n  { provide: BUTTON_OPTIONS, useValue: DEFAULT_BUTTON_OPTIONS },\r\n  { provide: ALERT_OPTIONS, useValue: DEFAULT_ALERT_OPTIONS },\r\n  { provide: TEXTBOX_OPTIONS, useValue: DEFAULT_TEXTBOX_OPTIONS },\r\n  { provide: IMAGE_OPTIONS, useValue: DEFAULT_IMAGE_OPTIONS },\r\n]"
                }
            ],
            "src/app/shared/components/image/image.options.ts": [
                {
                    "name": "DEFAULT_IMAGE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default image component options",
                    "description": "<p>Default image component options</p>\n"
                },
                {
                    "name": "IMAGE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/image/image.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ImageOptions>('Default Image component options')"
                }
            ],
            "src/app/components/profile/profile.options.ts": [
                {
                    "name": "DEFAULT_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile/profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProfileOptions",
                    "defaultValue": "{\r\n  showLink: true,\r\n}",
                    "rawdescription": "Default profile component options",
                    "description": "<p>Default profile component options</p>\n"
                },
                {
                    "name": "PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/profile/profile.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ProfileOptions>(\r\n  'Default profile component options',\r\n)"
                }
            ],
            "src/app/components/social-buttons/social-buttons.options.ts": [
                {
                    "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/social-buttons/social-buttons.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SocialButtonOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default social buttons component options",
                    "description": "<p>Default social buttons component options</p>\n"
                },
                {
                    "name": "SOCIAL_BUTTON_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/social-buttons/social-buttons.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<SocialButtonOptions>(\r\n  'Default social buttons component options',\r\n)"
                }
            ],
            "src/app/components/statistics/statistics.options.ts": [
                {
                    "name": "DEFAULT_STATISTICS_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/statistics/statistics.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatisticsOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default statistics component options",
                    "description": "<p>Default statistics component options</p>\n"
                },
                {
                    "name": "STATISTICS_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/statistics/statistics.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<StatisticsOptions>(\r\n  'Default statistics component options',\r\n)"
                }
            ],
            "src/app/shared/components/textbox/textbox.options.ts": [
                {
                    "name": "DEFAULT_TEXTBOX_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextboxOptions",
                    "defaultValue": "{\r\n  floatingLabels: false,\r\n}",
                    "rawdescription": "Default button component options",
                    "description": "<p>Default button component options</p>\n"
                },
                {
                    "name": "TEXTBOX_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/textbox/textbox.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<TextboxOptions>(\r\n  'Default Textbox component options',\r\n)"
                }
            ],
            "src/app/modules/user-profile/presenter/user-profile-pres.options.ts": [
                {
                    "name": "DEFAULT_USER_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserProfileOptions",
                    "defaultValue": "{}",
                    "rawdescription": "Default user profile component options",
                    "description": "<p>Default user profile component options</p>\n"
                },
                {
                    "name": "USER_PROFILE_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<UserProfileOptions>(\r\n  'Default user profile component options',\r\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n}"
                }
            ],
            "src/app/components/social-buttons/social-buttons.mocks.ts": [
                {
                    "name": "SOCIAL_BUTTONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/social-buttons/social-buttons.mocks.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { type: SocialButtonTypes.Facebook, link: 'https://facebook.com' },\r\n  { type: SocialButtonTypes.Skype, link: 'https://skype.com' },\r\n  { type: SocialButtonTypes.Linkedin, link: 'https://linkedin.com' },\r\n]"
                }
            ],
            "src/app/components/statistics/statistics.mocks.ts": [
                {
                    "name": "STATISTICS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/statistics/statistics.mocks.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Statistic[]",
                    "defaultValue": "[\r\n  { value: 8471, text: 'Wallets Balance' },\r\n  { value: 8512, text: 'Income amounts' },\r\n  { value: 4751, text: 'Total Transactions' },\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/shared/components/accordion/accordion.models.ts": [
                {
                    "name": "EventType",
                    "childs": [
                        {
                            "name": "Show",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "show.bs.collapse"
                        },
                        {
                            "name": "Shown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "shown.bs.collapse"
                        },
                        {
                            "name": "Hide",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hide.bs.collapse"
                        },
                        {
                            "name": "Hidden",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "hide.bs.collapse"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Bootstrap collapse events</p>\n",
                    "file": "src/app/shared/components/accordion/accordion.models.ts"
                }
            ],
            "src/app/shared/components/alert/alert.models.ts": [
                {
                    "name": "EventType",
                    "childs": [
                        {
                            "name": "Close",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "close.bs.alert"
                        },
                        {
                            "name": "Closed",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "closed.bs.alert"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Alert events</p>\n",
                    "file": "src/app/shared/components/alert/alert.models.ts"
                }
            ],
            "src/app/components/social-buttons/social-buttons.models.ts": [
                {
                    "name": "SocialButtonTypes",
                    "childs": [
                        {
                            "name": "Facebook",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-facebook"
                        },
                        {
                            "name": "Twitter",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-twitter"
                        },
                        {
                            "name": "Linkedin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-linkedin"
                        },
                        {
                            "name": "Skype",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-skype"
                        },
                        {
                            "name": "Instagram",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "bi-instagram"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Includes predefined bootstrap icon classes for social buttons</p>\n",
                    "file": "src/app/components/social-buttons/social-buttons.models.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/components/alert/alert.models.ts": [
                {
                    "name": "AlertTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"alert-primary\" | \"alert-secondary\" | \"alert-success\" | \"alert-danger\" | \"alert-warning\" | \"alert-info\" | \"alert-light\" | \"alert-dark\"",
                    "file": "src/app/shared/components/alert/alert.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Type containing class definitions for different alert types</p>\n",
                    "kind": 186
                }
            ],
            "src/app/shared/components/button/button.models.ts": [
                {
                    "name": "ButtonSizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | \"btn-lg\" | \"btn-sm\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Button sizes type</p>\n",
                    "kind": 186
                },
                {
                    "name": "ButtonStyles",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"link\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Type containing class definitions for different button types</p>\n",
                    "kind": 186
                },
                {
                    "name": "ButtonTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"button\" | \"reset\" | \"submit\"",
                    "file": "src/app/shared/components/button/button.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Button types [submit, reset, button]</p>\n",
                    "kind": 186
                }
            ],
            "src/app/shared/components/image/image.models.ts": [
                {
                    "name": "ImageType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"rounded\" | \"rounded-circle\"",
                    "file": "src/app/shared/components/image/image.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/components/textbox/textbox.models.ts": [
                {
                    "name": "TextboxSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string | \"form-control-lg\" | \"form-control-sm\"",
                    "file": "src/app/shared/components/textbox/textbox.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Add the relative form sizing classes to the .input-group itself and contents within will\nautomatically resize—no need for repeating the form control size classes on each element.</p>\n",
                    "kind": 186
                },
                {
                    "name": "TextboxType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"email\" | \"file\" | \"text\" | \"password\"",
                    "file": "src/app/shared/components/textbox/textbox.models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>HTML textbox types. Type contains only certain types and is extensible</p>\n",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 42,
        "status": "medium",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/login-status/login-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile/profile.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProfileComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile/profile.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile/profile.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProfileOptions",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/profile/profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PROFILE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/profile/profile.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROFILE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/profile/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SocialButtonsComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocialButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.mocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SOCIAL_BUTTONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialButton",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocialButtonOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_SOCIAL_BUTTON_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SOCIAL_BUTTON_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/social-buttons/social-buttons.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/statistics/statistics.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StatisticComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/statistics/statistics.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatisticsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/statistics/statistics.mocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATISTICS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/statistics/statistics.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Statistic",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/components/statistics/statistics.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatisticsOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/statistics/statistics.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_STATISTICS_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/statistics/statistics.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STATISTICS_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/statistics/statistics.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/components/statistics/statistics.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserProfilePresComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfile",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserProfileOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_USER_PROFILE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USER_PROFILE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/modules/user-profile/presenter/user-profile-pres.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AccordionComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "4/8",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AccordionOptions",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACCORDION_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_ACCORDION_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AlwaysOpen",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flushed",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-content.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionContentDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-header.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionHeaderDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/accordion/directives/accordion-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AccordionItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AlertComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlertComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AlertOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ALERT_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_ALERT_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdditionalContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AdditionalContentTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/alert/alert.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button-group/button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ButtonComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "5/10",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonOptions",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUTTON_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_BUTTON_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineDefault",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/button/pipes/button-style.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ButtonStylePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/carousel/carousel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CarouselComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/components.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_COMPONENT_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ImageComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/image/image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ImageOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_IMAGE_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/image/image.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IMAGE_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/image/image.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/list-group/list-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/popovers/popovers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoversComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/progress/progress.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.component.fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TextboxComponentFixture",
                "coveragePercent": 50,
                "coverageCount": "7/14",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TextboxOptions",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_TEXTBOX_OPTIONS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TEXTBOX_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Floating",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FloatingWithValue",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/textbox/textbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextboxInForm",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/components/toast/toast.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/tooltips/tooltips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/testing/component.base-fixture.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ComponentBaseFixture",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "src/app/templates/profile-template/profile-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}